{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/authorization/authentication.module.ts","webpack:///./src/app/authorization/login.guard.ts","webpack:///./src/app/authorization/user.service.ts","webpack:///./src/app/common/api.service.ts","webpack:///./src/app/common/common.module.ts","webpack:///./src/app/common/config.service.ts","webpack:///./src/app/common/loading-mask.service.ts","webpack:///./src/app/common/loading-mask/loading-mask.component.css","webpack:///./src/app/common/loading-mask/loading-mask.component.html","webpack:///./src/app/common/loading-mask/loading-mask.component.ts","webpack:///./src/app/common/models/domain/Deployment.ts","webpack:///./src/app/common/models/presentation/Deployment.ts","webpack:///./src/app/deployment/deployment-list/ColumnFactory.ts","webpack:///./src/app/deployment/deployment-list/deployment-list-pr.component.ts","webpack:///./src/app/deployment/deployment-list/deployment-list-rc.component.ts","webpack:///./src/app/deployment/deployment-list/deployment-list.component.html","webpack:///./src/app/deployment/deployment-list/deployment-list.component.scss","webpack:///./src/app/deployment/deployment-list/deployment-list.component.ts","webpack:///./src/app/deployment/deployment-progress-indicator/deployment-progress-indicator.component.css","webpack:///./src/app/deployment/deployment-progress-indicator/deployment-progress-indicator.component.html","webpack:///./src/app/deployment/deployment-progress-indicator/deployment-progress-indicator.component.ts","webpack:///./src/app/deployment/deployment.module.ts","webpack:///./src/app/deployment/deployment.service.ts","webpack:///./src/app/deployment/qa-server-state/qa-server-state.component.css","webpack:///./src/app/deployment/qa-server-state/qa-server-state.component.html","webpack:///./src/app/deployment/qa-server-state/qa-server-state.component.ts","webpack:///./src/app/local-storage.service.ts","webpack:///./src/app/overview/overview.component.css","webpack:///./src/app/overview/overview.component.html","webpack:///./src/app/overview/overview.component.ts","webpack:///./src/app/server-state/server-state-list/server-state-list.component.css","webpack:///./src/app/server-state/server-state-list/server-state-list.component.html","webpack:///./src/app/server-state/server-state-list/server-state-list.component.ts","webpack:///./src/app/server-state/server-state.module.ts","webpack:///./src/app/sidebar/sidebar.component.css","webpack:///./src/app/sidebar/sidebar.component.html","webpack:///./src/app/sidebar/sidebar.component.ts","webpack:///./src/app/utils/deployment.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,+H;;;;;;;;;;;ACA/D,4H;;;;;;;;;;;;;;;;;;;ACAwC;AACa;AACI;AAOzD;IAKE,sBAAmB,SAA2B,EAAE,WAAwB;QAArD,cAAS,GAAT,SAAS,CAAkB;QAJ9C,UAAK,GAAG,qBAAqB,CAAC;QAC9B,mBAAc,GAAG,IAAI,CAAC;QAIpB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3B,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAE/B,IAAM,WAAW,GAAG,SAAS,CAAC,cAAc,EAAE,CAAC;QAC/C,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IACjE,CAAC;IAZU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;+EAM8B,oEAAgB,EAAe,uEAAW;OAL7D,YAAY,CAaxB;IAAD,mBAAC;CAAA;AAbwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACT+B;AACA;AACD;AAEV;AACqB;AACS;AACE;AACpC;AACuB;AAC+B;AACxC;AAC+C;AACjC;AACH;AACH;AAC8C;AACK;AAC7C;AACN;AAExD,SAAS,aAAa,CAAC,GAAQ;IACpC,OAAO;QACL,OAAO,GAAG,CAAC,UAAU,EAAE,CAAC;IAC1B,CAAC,CAAC;AACJ,CAAC;AAEM,SAAS,iBAAiB,CAAC,UAAsB;IACtD,OAAO,IAAI,+EAAmB,CAAC,UAAU,CAAC,CAAC;AAC7C,CAAC;AAED,IAAM,SAAS,GAAW;IACxB,EAAE,IAAI,EAAE,0BAA0B,EAAE,SAAS,EAAE,4HAAkC,EAAE,WAAW,EAAE,CAAC,sEAAU,CAAC,EAAE;IAC9G,EAAE,IAAI,EAAE,+BAA+B,EAAE,SAAS,EAAE,iIAAuC,EAAE,WAAW,EAAE,CAAC,sEAAU,CAAC,EAAE;IACxH,EAAE,IAAI,EAAE,6BAA6B,EAAE,SAAS,EAAE,8GAAuB,EAAE,WAAW,EAAE,CAAC,sEAAU,CAAC,EAAE;IACtG,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,qHAAwB,EAAE,WAAW,EAAE,CAAC,sEAAU,CAAC,EAAE;IACnF,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,+EAAiB,EAAE,WAAW,EAAE,CAAC,sEAAU,CAAC,EAAE;IAC7E,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,2BAA2B,EAAE,WAAW,EAAE,CAAC,sEAAU,CAAC,EAAE;CACnF,CAAC;AAiCF;IAAA;IAAwB,CAAC;IAAZ,SAAS;QA/BrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,+EAAiB;gBACjB,4EAAgB;aACjB;YACD,OAAO,EAAE;gBACP,4DAAY,CAAC,OAAO,CAClB,SAAS,EACT,EAAC,aAAa,EAAE,KAAK,EAAC,CACvB;gBACD,uEAAa;gBACb,qEAAgB;gBAChB,oEAAe,CAAC,OAAO,CAAC;oBACtB,MAAM,EAAE;wBACN,OAAO,EAAE,oEAAe;wBACxB,UAAU,EAAE,iBAAiB;wBAC7B,IAAI,EAAE,CAAC,+DAAU,CAAC;qBACnB;iBACF,CAAC;gBACF,4FAAuB;gBACvB,YAAY;gBACZ,yFAAoB;gBACpB,8EAAgB;gBAChB,oFAAiB;aAClB;YACD,SAAS,EAAE;gBACT,EAAC,OAAO,EAAE,6DAAe,EAAE,UAAU,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,uDAAG,CAAC,EAAE,KAAK,EAAE,IAAI,EAAC;aAChF;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAG;IAAD,gBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;ACvEmB;AACM;AAS/C;IAAA;IAAoC,CAAC;IAAxB,oBAAoB;QAPhC,8DAAQ,CAAC;YACR,YAAY,EAAE,EAAE;YAChB,OAAO,EAAE,EAAE;YACX,OAAO,EAAE;gBACP,4DAAY;aACb;SACF,CAAC;OACW,oBAAoB,CAAI;IAAD,2BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;ACVQ;AAIE;AACK;AAKhD;IAIE,oBAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IACpE,CAAC;IAEK,gCAAW,GAAjB,UAAkB,KAA6B,EAAE,KAA0B;;;;;4BAC3D,qBAAM,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE;;wBAAjD,OAAO,GAAG,SAAuC;wBAErD,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;4BACjB,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAM,IAAI,CAAC,MAAM,CAAC,cAAc,mBAAgB,CAAC;4BACrE,sBAAO,KAAK,EAAC;yBACd;wBAED,sBAAO,IAAI,EAAC;;;;KACb;IAhBU,UAAU;QAHtB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAKiC,yDAAW,EAAkB,6DAAM;OAJzD,UAAU,CAiBtB;IAAD,iBAAC;CAAA;AAjBsB;;;;;;;;;;;;;;;;;;;;;;;ACV0B;AACP;AACmB;AACtB;AACS;AAEA;AAGhD,IAAM,IAAI,GAAG;IACX,kBAAkB,EAAE,gBAAgB;IACpC,gBAAgB,EAAE,gBAAgB;IAClC,YAAY,EAAE,aAAa;IAC3B,YAAY,EAAE,aAAa;CAC5B,CAAC;AAOF;IAQE,qBAAY,GAAQ,EAAE,MAAc,EAAE,mBAAwC,EAAE,MAAc,EAAE,IAAY,EAAE,IAAgB;QAC5H,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;QAC/C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC,CAAC;QAC7D,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC;IACjE,CAAC;IAEO,+BAAS,GAAjB;QAAA,iBAeC;QAdC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;oBACd,SAAS,EAAE,KAAI,CAAC,MAAM,CAAC,iBAAiB;oBACxC,YAAY,EAAE,oBAAoB;oBAClC,KAAK,EAAE,eAAe;oBACtB,WAAW,EAAE,SAAS;oBACtB,MAAM,EAAE,wBAAwB;oBAChC,aAAa,EAAE,YAAY;iBAC5B,CAAC,CAAC;gBAEH,OAAO,EAAE,CAAC;YACZ,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,wCAAkB,GAAzB,UAA0B,EAAiB;QAA3C,iBAaC;YAb0B,oCAAe;QACxC,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC;YAC3B,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE;gBACtC,KAAK,EAAE,eAAe;gBACtB,KAAK,EAAE,GAAG;gBACV,MAAM,EAAE,EAAE;gBACV,SAAS,EAAE,IAAI;gBACf,KAAK,EAAE,MAAM;gBACb,SAAS,EAAE,UAAC,UAAU;oBACpB,KAAI,CAAC,WAAW,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;gBAChD,CAAC;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,iCAAW,GAAnB,UAAoB,UAAU,EAAE,eAAe;QAA/C,iBAUC;QATC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YACZ,IAAI,CAAC,KAAI,CAAC,cAAc,EAAE,EAAE;gBAC1B,KAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;aACjE;YAED,KAAI,CAAC,qBAAqB,EAAE,CAAC;YAE7B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACK,2CAAqB,GAA7B;QACE,IAAM,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAEhF,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,CAAC,eAAe,GAAG,EAAE,CAAC,EAAE;YACjD,OAAO,KAAK,CAAC;SACd;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;OAEG;IACW,wCAAkB,GAAhC;;;;;4BACE,qBAAM,IAAI,CAAC,SAAS,EAAE;;wBAAtB,SAAsB,CAAC;wBAEvB,sBAAO,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC;gCACvE,2DAAW,CAAiC;gCACnD,KAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;gCACjE,OAAO,WAAW,CAAC;4BACrB,CAAC,CAAC,EAAC;;;;KACJ;IAEO,2CAAqB,GAA7B;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;QACnE,IAAM,OAAO,GAAG,WAAW,CAAC,eAAe,EAAE,CAAC;QAC9C,IAAM,SAAS,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QAErC,IAAM,OAAO,GAAG,WAAW,CAAC,eAAe,EAAE,CAAC;QAC9C,IAAM,WAAW,GAAG,OAAO,CAAC,QAAQ,CAAC;QAErC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;QACjE,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;QAC5E,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE;YAClD,KAAK,EAAE,SAAS;YAChB,SAAS,EAAE,OAAO,CAAC,YAAY,EAAE;YACjC,QAAQ,EAAE,OAAO,CAAC,aAAa,EAAE;YACjC,QAAQ,EAAE,OAAO,CAAC,WAAW,EAAE;SAChC,CAAC,CAAC;QAEH,OAAO;YACL,SAAS;YACT,WAAW;SACZ,CAAC;IACJ,CAAC;IAED,oCAAc,GAAd;QACE,OAAO,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC7D,CAAC;IAEH;;;;;UAKM;IAEJ,oCAAc,GAAd;QACE,OAAO,IAAI,CAAC;QACZ,OAAO,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAY,CAAC;IAC9E,CAAC;IAEO,oCAAc,GAAtB;QACE,OAAO,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;IACzD,CAAC;IAEK,oCAAc,GAApB;;;;;4BACiC,qBAAM,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE;;wBAA9D,OAAO,GAAoB,SAAmC;wBAElE,IAAI,OAAO,CAAC,IAAI,EAAE;4BAChB,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,CAAC,IAAI,CAAC;yBAClE;wBAED,sBAAO,OAAO,EAAC;;;;KAChB;IAEO,2CAAqB,GAA7B;QAAA,iBAcC;QAbC,OAAO,UAAO,GAAG;;;;;wBACX,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;6BAEpC,WAAW,EAAX,wBAAW;6BACT,IAAI,CAAC,qBAAqB,EAAE,EAA5B,wBAA4B;wBAChB,qBAAM,IAAI,CAAC,kBAAkB,EAAE;;wBAA7C,WAAW,GAAG,SAA+B,CAAC;;;wBAGhD,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,WAAW,CAAC;;4BAG5C,sBAAO,GAAG,EAAC;;;aACZ,CAAC;IACJ,CAAC;IAEO,4CAAsB,GAA9B;QAAA,iBAUC;QATC,OAAO,UAAC,GAAG;YACT,IAAM,WAAW,GAAG,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;YAEhD,IAAI,WAAW,EAAE;gBACf,KAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;aAC9D;YAED,OAAO,GAAG,CAAC;QACb,CAAC,CAAC;IACJ,CAAC;IAxKU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EASiB,uDAAG,EAAU,6DAAM,EAAuB,0EAAmB,EAAU,sDAAM,EAAQ,oDAAM,EAAQ,+DAAU;OARnH,WAAW,CAyKvB;IAAD,kBAAC;CAAA;AAzKuB;;;;;;;;;;;;;;;;;;;;;;ACrBiB;AACI;AACa;AAClB;AAExC,6DAAO,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;AAKpC;IAQE,aAAY,iBAAqC,EAAE,MAAc;QAAjE,iBAmBC;QAvBO,wBAAmB,GAA0B,EAAE,CAAC;QAChD,yBAAoB,GAA0B,EAAE,CAAC;QAIvD,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAC3C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAG;YAC/B,KAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE,CAAC;YACzC,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,aAAG;YAChC,KAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE,CAAC;YAEzC,IAAI,GAAG,CAAC,EAAE,KAAK,KAAK,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE;gBACpD,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;gBAClC,OAAO,GAAG,CAAC;aACZ;YAED,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAqB,GAArB,UAAsB,cAAiC;QACrD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAChD,CAAC;IAED,oCAAsB,GAAtB,UAAuB,cAAiC;QACtD,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACjD,CAAC;IAEK,wBAAU,GAAhB;;;;;;4BACE,qBAAM,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;;wBAA9B,SAA8B,CAAC;wBAGpB,qBAAM,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,EAAE,EAAR,CAAQ,CAAC;;wBAA9D,IAAI,GAAG,SAAuD;wBAElE,IAAI,CAAC,OAAO,GAAG;4BACb,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM;yBACzD,CAAC;wBAEF,SAAI;wBAAkB,qBAAM,6DAAO,CAAC;gCAClC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU;gCAC3B,IAAI;gCACJ,kBAAkB,EAAE,UAAC,GAAG;oCACtB,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB,CAAC;oCAEjD,OAAO,KAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,UAAC,OAAO,EAAE,WAAW;wCAC1D,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;wCAC/B,OAAO,OAAO,CAAC;oCACjB,CAAC,EAAE,GAAG,CAAC,CAAC;gCACV,CAAC;gCACD,mBAAmB,EAAE,UAAC,GAAG;oCACvB,OAAO,KAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,UAAC,QAAQ,EAAE,WAAW;wCAC5D,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC;wCACjC,OAAO,QAAQ,CAAC;oCAClB,CAAC,EAAE,GAAG,CAAC,CAAC;gCACV,CAAC;6BACF,CAAC;;wBAjBF,GAAK,cAAc,GAAG,SAiBpB,CAAC;4CAGQ,MAAM;4BACf,IAAM,GAAG,GAAG,OAAK,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oDAElC,YAAY;gCACrB,IAAM,EAAE,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC;gCAE7B,GAAG,CAAC,YAAY,CAAC,GAAG;oCAClB,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,UAAS,GAAG;wCAC/D,IAAI,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE;4CAC3B,OAAO,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;yCACrB;wCACD,OAAO,GAAG,CAAC;oCACb,CAAC,CAAC,CAAC,CAAC;gCACN,CAAC,CAAC;;4BAVJ,KAAK,IAAM,YAAY,IAAI,GAAG;wCAAnB,YAAY;6BAWtB;;;wBAfH,yDAAyD;wBACzD,KAAW,MAAM,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI;oCAAlC,MAAM;yBAehB;wBAED,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;;;;;KACjD;IArFU,GAAG;QAHf,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAS+B,wEAAkB,EAAU,sDAAM;OARtD,GAAG,CAsFf;IAAD,UAAC;CAAA;AAtFe;AAwFhB;IAEE,iBAAY,cAAuB;QACjC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACvC,CAAC;IACK,uBAAK,GAAX,UAAY,KAAK,EAAE,WAAW;;;gBAC5B,sBAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;wBACzC,KAAK;wBACL,WAAW;wBACX,OAAO,EAAE;4BACP,WAAW;yBACZ;qBACF,CAAC,EAAC;;;KACJ;IAED,4BAAU,GAAV;QACE,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;IACpD,CAAC;IACH,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpH6D;AACf;AACS;AACqB;AACnC;AACM;AACJ;AACF;AACY;AACN;AACE;AACP;AACD;AACE;AACU;AACF;AA4BpD;IAAA;IAAmC,CAAC;IAAvB,mBAAmB;QAzB/B,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,yFAAoB,CAAC;YACpC,OAAO,EAAE;gBACP,4DAAY;aACb;YACD,SAAS,EAAE;gBACT,yDAAW;aACZ;YACD,OAAO,EAAE;gBACP,yFAAoB;gBACpB,yDAAW;gBACX,+DAAc;gBACd,2DAAY;gBACZ,yDAAW;gBACX,qEAAiB;gBACjB,gEAAc;gBACd,kEAAe;gBACf,2DAAW;gBACX,kEAAe;gBACf,4DAAY;gBACZ,sEAAiB;gBACjB,qEAAgB;gBAChB,oEAAe;aAChB;SACF,CAAC;OACW,mBAAmB,CAAI;IAAD,0BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;AC3CW;AACO;AAOlD;IAOE,gBAAY,IAAgB;QAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC;QACxG,IAAI,CAAC,MAAM,GAAM,IAAI,CAAC,cAAc,SAAM,CAAC;QAC3C,IAAI,CAAC,UAAU,GAAM,IAAI,CAAC,MAAM,cAAW,CAAC;IAC9C,CAAC;IAEK,2BAAU,GAAhB;;;;gBACE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,cAAc,gBAAa,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,UAAC,EAAwB;wBAAvB,wCAAiB;oBACrF,KAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;gBAC7C,CAAC,CAAC,CAAC;;;;KACJ;IAlBU,MAAM;QAHlB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAQkB,+DAAU;OAPjB,MAAM,CAmBlB;IAAD,aAAC;CAAA;AAnBkB;;;;;;;;;;;;;;;;;;;ACRsB;AACA;AAMzC;IAGE;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,4CAAO,EAAO,CAAC;QAClC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;IAChD,CAAC;IAEM,0CAAa,GAApB,UAAqB,IAAiC;QACpD,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAEM,4CAAe,GAAtB;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAEM,4CAAe,GAAtB;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAlBU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,kBAAkB,CAmB9B;IAAD,yBAAC;CAAA;AAnB8B;;;;;;;;;;;;ACP/B,+DAA+D,uK;;;;;;;;;;;ACA/D,mjB;;;;;;;;;;;;;;;;;;ACA0D;AACC;AAO3D;IAIE,8BAAY,kBAAsC,EAAE,IAAY;QAAhE,iBASC;QARC,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAC7C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,mBAAS;YAC7C,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC;gBACZ,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC7B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAQ,GAAR;IACA,CAAC;IAhBU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,+HAA4C;;SAE7C,CAAC;+EAKgC,wEAAkB,EAAQ,oDAAM;OAJrD,oBAAoB,CAiBhC;IAAD,2BAAC;CAAA;AAjBgC;;;;;;;;;;;;;ACRjC;AAAA;AAAA;AAAA;AAAA;AAAA,IAAY,cAKX;AALD,WAAY,cAAc;IACxB,qCAAmB;IACnB,qCAAmB;IACnB,2CAAyB;IACzB,2BAAS;AACX,CAAC,EALW,cAAc,KAAd,cAAc,QAKzB;AAED,IAAY,gBAOX;AAPD,WAAY,gBAAgB;IAC1B,iCAAa;IACb,kCAAc;IACd,+CAA2B;IAC3B,2CAAuB;IACvB,mCAAe;IACf,uDAAmC;AACrC,CAAC,EAPW,gBAAgB,KAAhB,gBAAgB,QAO3B;AAsBD,IAAY,eAKX;AALD,WAAY,eAAe;IACzB,gCAAa;IACb,oCAAiB;IACjB,wCAAqB;IACrB,kDAA+B;AACjC,CAAC,EALW,eAAe,KAAf,eAAe,QAK1B;AAED,IAAY,iBAIX;AAJD,WAAY,iBAAiB;IAC3B,sDAAiC;IACjC,wDAAmC;IACnC,sCAAiB;AACnB,CAAC,EAJW,iBAAiB,KAAjB,iBAAiB,QAI5B;;;;;;;;;;;;;ACxCD;AAAA;AAAA;IAAA;IAmBA,CAAC;IAlBQ,6CAA4B,GAAnC,UAAoC,WAAyB;QAC3D,OAAO,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;IACxD,CAAC;IAEM,yCAAwB,GAA/B,UAAgC,UAAsB;QACpD,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;QACpD,IAAM,sBAAsB,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,UAAU,CAA2B,CAAC;QAEvF,IAAI,sBAAsB,CAAC,cAAc,EAAE;YACzC,sBAAsB,CAAC,0BAA0B,GAAG,EAAE,CAAC;YAEvD,sBAAsB,CAAC,cAAc,CAAC,OAAO,CAAC,oBAAU;gBACtD,sBAAsB,CAAC,0BAA0B,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,UAAU,CAAC,EAAE,EAAE,KAAK,EAAE,UAAU,CAAC,IAAI,EAAC,CAAC,CAAC;YACzG,CAAC,CAAC,CAAC;SACJ;QAED,OAAO,sBAAsB,CAAC;IAChC,CAAC;IACH,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACxBD;AAAA;AAAA;AAAA,IAAY,UAGX;AAHD,WAAY,UAAU;IACpB,qDAAuC;IACvC,2CAA6B;AAC/B,CAAC,EAHW,UAAU,KAAV,UAAU,QAGrB;AAED,IAAM,YAAY,GAAG;IACnB,IAAI,EAAE;QACJ,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI;KACnE;IACD,OAAO,EAAE;QACP,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAC,GAAe;YAChF,OAAO,iCAA4B,GAAG,CAAC,YAAY,WAAK,GAAG,CAAC,OAAO,SAAM,CAAC;QAC5E,CAAC;KACF;CACF,CAAC;AAEF;IAAA;IA2CA,CAAC;IA1CQ,wBAAU,GAAjB,UAAkB,IAAgB;QAChC,IAAI,IAAI,KAAK,UAAU,CAAC,YAAY,EAAE;YACpC,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC;SACrC;QACD,OAAO,IAAI,CAAC,0BAA0B,EAAE,CAAC;IAC3C,CAAC;IAEc,wCAA0B,GAAzC;QACE,OAAO;YACL,YAAY,CAAC,IAAI;YACjB,YAAY,CAAC,OAAO;YACpB,EAAC,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,EAAC;SAC5D,CAAC;IACJ,CAAC;IAEc,mCAAqB,GAApC;QACE,OAAO;YACL,YAAY,CAAC,IAAI;YACjB,YAAY,CAAC,OAAO;YACpB;gBACE,KAAK,EAAE,0BAA0B,EAAE,MAAM,EAAE,aAAa,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,YAAC,GAAe;oBACnG,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE;wBACxB,OAAO,EAAE,CAAC;qBACX;oBACD,OAAO,iCAA4B,GAAG,CAAC,eAAe,CAAC,QAAQ,WAAK,GAAG,CAAC,eAAe,CAAC,WAAW,SAAM,CAAC;gBAC5G,CAAC;aACF;YACD,EAAC,KAAK,EAAE,iBAAiB,EAAE,MAAM,EAAE,aAAa,EAAE,UAAU,EAAE,IAAI,EAAC;YACnE,EAAC,KAAK,EAAE,8BAA8B,EAAE,MAAM,EAAE,eAAe,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,YAAC,GAAe;oBACzG,OAAO,4BAAwB,GAAG,CAAC,eAAe,CAAC,YAAY,kBAAa,GAAG,CAAC,eAAe,CAAC,YAAY,UAAO,CAAC;gBACvH,CAAC,EAAE;YACH,EAAC,KAAK,EAAE,wBAAwB,EAAE,MAAM,EAAE,qBAAqB,EAAE,UAAU,EAAE,KAAK,EAAC;YACnF;gBACE,KAAK,EAAE,0BAA0B,EAAE,MAAM,EAAE,aAAa,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,YAAC,GAAe;oBACnG,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE;wBACxB,OAAO,EAAE,CAAC;qBACX;oBACD,OAAO,iCAA4B,GAAG,CAAC,eAAe,CAAC,QAAQ,WAAK,GAAG,CAAC,eAAe,CAAC,SAAS,SAAM,CAAC;gBAC1G,CAAC;aACF;SACF,CAAC;IACJ,CAAC;IACH,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;AC7DuC;AACG;AACyC;AACb;AAQvE;IAAyD,4FAAuB;IANhF;QAAA,qEAWC;QAJC,oBAAc,GAAG,yEAAc,CAAC,YAAY,CAAC;QAC7C,oBAAc,GAAG,IAAI,CAAC;QACtB,iBAAW,GAAG,sFAAc,CAAC,EAAE,CAAC;QAChC,qBAAe,GAAG,IAAI,CAAC;;IACzB,CAAC;IALY,kCAAkC;QAN9C,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAClC,4IAA+C;YAE/C,SAAS,EAAE,CAAC,0DAAc,CAAC;;SAC5B,CAAC;OACW,kCAAkC,CAK9C;IAAD,yCAAC;CAAA,CALwD,kFAAuB,GAK/E;AAL8C;;;;;;;;;;;;;;;;;;;;;;ACXC;AAEL;AACyC;AACb;AAQvE;IAA8D,iGAAuB;IANrF;QAAA,qEAUC;QAHC,oBAAc,GAAG,yEAAc,CAAC,iBAAiB,CAAC;QAClD,oBAAc,GAAG,IAAI,CAAC;QACtB,iBAAW,GAAG,sFAAc,CAAC,UAAU,CAAC;;IAC1C,CAAC;IAJY,uCAAuC;QANnD,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAClC,4IAA+C;YAE/C,SAAS,EAAE,CAAC,0DAAc,CAAC;;SAC5B,CAAC;OACW,uCAAuC,CAInD;IAAD,8CAAC;CAAA,CAJ6D,kFAAuB,GAIpF;AAJmD;;;;;;;;;;;;ACZpD,sCAAsC,kBAAkB,uSAAuS,iBAAiB,wBAAwB,gBAAgB,++CAA++C,YAAY,8dAA8d,eAAe,mUAAmU,mWAAmW,eAAe,8JAA8J,4BAA4B,ijCAAijC,yFAAyF,4GAA4G,aAAa,4jBAA4jB,4BAA4B,0MAA0M,+BAA+B,kSAAkS,oDAAoD,0PAA0P,oDAAoD,wPAAwP,gDAAgD,iSAAiS,gEAAgE,wR;;;;;;;;;;;ACAhkN,gCAAgC,eAAe,EAAE,+CAA+C,md;;;;;;;;;;;;;;;;;;;;;;;;ACAhD;AACQ;AAC8D;AAE3E;AACe;AAE6C;AAEvG,IAAY,cAIX;AAJD,WAAY,cAAc;IACxB,+CAA6B;IAC7B,yDAAuC;IACvC,0BAAQ;AACV,CAAC,EAJW,cAAc,KAAd,cAAc,QAIzB;AAQD;IAiCE,iCAAY,iBAAoC,EAAE,cAA8B;QAvBhF,uBAAkB,GAAG,IAAI,CAAC;QAQ1B,oBAAe,GAAiB;YAC9B,EAAC,KAAK,EAAE,cAAc,EAAE,KAAK,EAAE,cAAc,CAAC,YAAY,EAAC;YAC3D,EAAC,KAAK,EAAE,mBAAmB,EAAE,KAAK,EAAE,cAAc,CAAC,iBAAiB,EAAC;SACtE,CAAC;QAIF,mBAAc,GAAiB;YAC7B,EAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAC;YACzB,EAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAC;YACpC,EAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAC;YACpC,EAAC,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,YAAY,EAAC;SAC3C,CAAC;QACF,sBAAiB,GAA4F,EAAC,KAAK,EAAE,EAAE,EAAC,CAAC;QAGvH,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAC3C,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACvC,CAAC;IAEK,0CAAQ,GAAd;;;;;;wBACE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;wBAC1C,qBAAM,IAAI,CAAC,iBAAiB,EAAE;;wBAA9B,SAA8B,CAAC;wBAE/B,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,cAAM,YAAI,CAAC,iBAAiB,EAAE,EAAxB,CAAwB,CAAC,CAAC;;;;;KAC5E;IAEK,mDAAiB,GAAvB;;;;;;;wBACE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;4BACrB,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;yBACzC;wBAEyB,qBAAM,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,CAAC,IAAI,CAAC,WAAW,CAAC;;wBAAlG,iBAAiB,GAAG,SAA8E;wBAExG,IAAI,CAAC,gBAAgB,GAAG,iBAAiB,CAAC,gBAAgB,CAAC,MAAM,CAAC,UAAC,IAAI,EAAE,MAAM;4BAC7E,IAAI,CAAC,IAAI,CAAC;gCACR,KAAK,EAAE,MAAM,CAAC,GAAG;gCACjB,KAAK,EAAE,MAAM,CAAC,GAAG;6BAClB,CAAC,CAAC;4BACH,OAAO,IAAI,CAAC;wBACd,CAAC,EAAE,EAAE,CAAC,CAAC;wBAEP,IAAI,CAAC,sBAAsB,GAAG,iBAAiB,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,iBAAiB,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;wBAEjH,IAAI,CAAC,cAAc,GAAG,iBAAiB,CAAC,WAAW,CAAC,MAAM,CAAC,UAAC,OAAO,EAAE,UAAU;4BAC7E,OAAO,CAAC,IAAI,CAAC;gCACX,KAAK,EAAE,UAAU;gCACjB,KAAK,EAAE,UAAU;6BAClB,CAAC,CAAC;4BACH,OAAO,OAAO,CAAC;wBACjB,CAAC,EAAE,CAAC;gCACF,KAAK,EAAE,KAAK;gCACZ,KAAK,EAAE,SAAS;6BACjB,CAAC,CAAC,CAAC;wBAEJ,IAAI,CAAC,qBAAqB,GAAG,iBAAiB,CAAC,eAAe,CAAC,MAAM,CAAC,UAAC,OAAO,EAAE,cAAc;4BAC5F,OAAO,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,cAAc,EAAE,KAAK,EAAE,cAAc,EAAC,CAAC,CAAC;4BAC7D,OAAO,OAAO,CAAC;wBACjB,CAAC,EAAE,CAAC;gCACF,KAAK,EAAE,EAAE;gCACT,KAAK,EAAE,SAAS;6BACjB,CAAC,CAAC,CAAC;wBAEJ,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,UAAC,EAAoC;gCAAnC,wBAAS,EAAE,kCAAc,EAAE,oBAAO;4BAC9E,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC;gCACtB,QAAQ,EAAE,MAAM;gCAChB,OAAO,EAAK,SAAS,YAAS;gCAC9B,MAAM,EAAE,iBAAe,cAAc,qCAAgC,OAAS;6BAC/E,CAAC,CAAC;wBACL,CAAC,CAAC,CAAC;;;;;KACJ;IAEK,iDAAe,GAArB,UAAsB,EAAmC;YAAlC,gBAAK,EAAE,cAAI,EAAE,wBAAS,EAAE,wBAAS;;;;;;wBACtD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE;4BACpC,KAAK;4BACL,IAAI;4BACJ,SAAS;4BACT,SAAS;yBACV,CAAC,CAAC;wBAEH,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;wBAE3B,uBAAuB,GAAG,IAAI,CAAC,cAAc,KAAK,cAAc,CAAC,YAAY,CAAC;wBAC9E,kBAAkB,GAAG,IAAI,CAAC,cAAc,KAAK,cAAc,CAAC,iBAAiB,CAAC;wBAE5E,KAAK,GAAG;4BACZ,IAAI,EAAE,uBAAuB,CAAC,CAAC,CAAC,+EAAc,CAAC,EAAE,CAAC,CAAC,CAAC,+EAAc,CAAC,OAAO;4BAC1E,eAAe,EAAE;gCACf,OAAO,EAAE,uBAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;6BAChD;yBACK,CAAC;wBAET,IAAI,uBAAuB,EAAE;4BAC3B,KAAK,CAAC,wBAAwB,CAAC,GAAG,EAAC,GAAG,EAAE,kFAAiB,CAAC,MAAM,EAAC,CAAC;yBACnE;wBAED,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;wBAE7C,UAAU,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;wBAEnB,qBAAM,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC;gCAC7D,KAAK;gCACL,UAAU;gCACV,QAAQ,EAAE,IAAI;gCACd,IAAI,EAAE;oCACJ,QAAQ,EAAE,SAAS;oCACnB,SAAS,EAAE,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM;iCAC5C;gCACD,QAAQ,EAAE,kBAAkB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS;6BAClD,CAAC;;wBATI,UAAU,GAAG,SASjB;wBAEF,IAAI,CAAC,WAAW,GAAG,8FAAgB,CAAC,4BAA4B,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;wBACnF,IAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC,UAAU,CAAC;wBAE9C,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;;;;;KACjC;IAED,2DAAyB,GAAzB,UAA0B,QAAQ,EAAE,KAAK,EAAE,IAAe;QAAf,sCAAe;;QACxD,IAAI,QAAQ,CAAC;QAEb,IAAI,IAAI,KAAK,QAAQ,EAAE;YACrB,QAAQ,GAAG,KAAK,CAAC;SAClB;QAED,IAAI,KAAK,IAAI,OAAO,KAAK,KAAK,SAAS,EAAE;YACvC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAI,GAAC,QAAQ,IAAG,KAAK,KAAC,CAAC;SAC9D;aAAM;YACL,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;SAC/C;QAED,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,iBAAwB,CAAC,CAAC;IACtD,CAAC;IAED,+CAAa,GAAb,UAAc,UAAsB;QAClC,oGAAoG;IACtG,CAAC;IAED,+CAAa,GAAb,UAAc,UAAsB;QAApC,iBAkBC;QAjBC,IAAI,MAAM,GAAG,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,UAAU,CAAC,UAAU,CAAC,EAAE,EAAjC,CAAiC,CAAC,CAAC;QAEpF,IAAM,aAAa,GAAG;YACpB,MAAM,EAAE,UAAU,CAAC,eAAe,CAAC,MAAM;YACzC,YAAY,EAAE,UAAU,CAAC,UAAU,CAAC,EAAE;SACvC,CAAC;QAGF,IAAI,MAAM,CAAC,IAAI,KAAK,iFAAgB,CAAC,IAAI,EAAE;YACzC,IAAI,CAAC,0BAA0B,GAAG,UAAU,CAAC;SAC9C;QAED,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC,IAAI,CAAC;YACzE,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;QACpF,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;YACV,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,GAAG,CAAC,OAAO,EAAC,CAAC,CAAC;QAC1F,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2DAAyB,GAAzB;QACE,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC;IACzC,CAAC;IAED,iDAAe,GAAf,UAAgB,UAAsB,EAAE,KAAa;QACnD,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,gBAAgB,EAAC,CAAC,CAAC;IAC/F,CAAC;IAED,iDAAe,GAAf,UAAgB,cAA4C;QAA5C,kDAAiB,cAAc,CAAC,YAAY;QAC1D,IAAM,UAAU,GAAG,cAAc,KAAK,cAAc,CAAC,YAAY,CAAC,CAAC,CAAC,yDAAU,CAAC,YAAY,CAAC,CAAC,CAAC,yDAAU,CAAC,iBAAiB,CAAC;QAC3H,IAAI,CAAC,IAAI,GAAG,4DAAa,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;IACnD,CAAC;IAED,6DAA2B,GAA3B,UAA4B,UAAsB;QAChD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,qBAAqB,GAAG,UAAU,CAAC;IAC1C,CAAC;IAEK,yDAAuB,GAA7B;;;;;;wBACQ,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC;;;;6BAG3D,aAAa,EAAb,wBAAa;wBACf,qBAAM,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,CAAC;gCACnD,cAAc,EAAE,IAAI,CAAC,qBAAqB,CAAC,IAAI;gCAC/C,MAAM,EAAE,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC,MAAM;gCACzD,UAAU,EAAE,CAAC,IAAI,CAAC,sBAAsB,CAAC;6BAC1C,CAAC;;wBAJF,SAIE,CAAC;;4BAEH,qBAAM,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC;4BAC7C,cAAc,EAAE,IAAI,CAAC,qBAAqB,CAAC,IAAI;4BAC/C,OAAO,EAAE,IAAI,CAAC,qBAAqB,CAAC,OAAO;4BAC3C,SAAS,EAAE,IAAI,CAAC,sBAAsB;yBACvC,CAAC;;wBAJF,SAIE,CAAC;;;;;wBAGL,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,KAAG,CAAC,OAAO,EAAE,MAAM,EAAE,KAAG,CAAC,OAAO,EAAC,CAAC,CAAC;;;wBAExF,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;;;;;;KAE9B;IAED,8CAAY,GAAZ,UAAa,OAAO,EAAE,EAAiB;YAAhB,gBAAK,EAAE,sBAAQ;QACpC,IAAM,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrC,IAAI,GAAG,GAAG,OAAO,CAAC;QAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3C,IAAM,SAAS,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;YACjC,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC;YAErB,IAAI,CAAC,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;gBACnC,MAAM;aACP;SACF;QAED,IAAI,QAAQ,EAAE;YACZ,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;SACzB;QAED,OAAO,GAAG,CAAC;IACb,CAAC;IA3OU,uBAAuB;QANnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,4IAA+C;YAE/C,SAAS,EAAE,CAAC,0DAAc,CAAC;;SAC5B,CAAC;+EAkC+B,qEAAiB,EAAkB,0DAAc;OAjCrE,uBAAuB,CA4OnC;IAAD,8BAAC;CAAA;AA5OmC;;;;;;;;;;;;ACrBpC,+DAA+D,uN;;;;;;;;;;;ACA/D,iEAAiE,wCAAwC,GAAG,mCAAmC,iGAAiG,aAAa,kFAAkF,oEAAoE,yCAAyC,2HAA2H,6S;;;;;;;;;;;;;;;;;;ACA3e;AACpB;AAEX;AAO7C;IAUE,8CAAY,iBAAoC;QATxC,YAAO,GAAG,KAAK,CAAC;QAEjB,kBAAa,GAAG,IAAI,CAAC;QACrB,qBAAgB,GAA4B,EAAE,CAAC;QAG/C,WAAM,GAAG,IAAI,0DAAY,EAAE,CAAC;QAIjC,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;IAC7C,CAAC;IAED,uDAAQ,GAAR;QAAA,iBAmBC;QAlBC,IAAI,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,CAAC,eAAK;YACpD,IAAI,KAAK,GAAG,KAAK,CAAC;YAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrD,IAAI,aAAa,GAAG,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;gBAE7C,IAAI,aAAa,CAAC,SAAS,KAAK,KAAK,CAAC,SAAS,EAAE;oBAC/C,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;oBACjC,KAAK,GAAG,IAAI,CAAC;oBACb,MAAM;iBACP;aAEF;YAED,IAAI,CAAC,KAAK,EAAE;gBACV,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACnC;QACH,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,0DAAW,GAAX;QACE,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;IAC7B,CAAC;IAGD,sBAAI,4DAAU;aAKd;YACE,OAAO,IAAI,CAAC,WAAW,CAAC;QAC1B,CAAC;aAPD,UAAe,UAAsB;YACnC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAChC,CAAC;;;OAAA;IAMD,0DAAW,GAAX;QACE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IACjC,CAAC;IA9CD;QADC,4DAAM,EAAE;;wEAC0B;IAiCnC;QADC,2DAAK,EAAE;;;0EAIP;IA3CU,oCAAoC;QALhD,+DAAS,CAAC;YACT,QAAQ,EAAE,mCAAmC;YAC7C,sLAA6D;;SAE9D,CAAC;+EAW+B,qEAAiB;OAVrC,oCAAoC,CAuDhD;IAAD,2CAAC;CAAA;AAvDgD;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVV;AACM;AACuC;AACxB;AACsC;AACK;AACwB;AAC1C;AACvC;AAsB9C;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QApB5B,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,kGAAuB;gBACvB,gHAAkC;gBAClC,qHAAuC;gBACvC,2IAAoC;gBACpC,iGAAsB;aACvB;YACD,OAAO,EAAE;gBACP,4DAAY;gBACZ,yEAAmB;gBACnB,6DAAa;aACd;YACD,OAAO,EAAE;gBACP,kGAAuB;gBACvB,gHAAkC;gBAClC,qHAAuC;aAExC;SACF,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AC9BoB;AACP;AACiH;AAElH;AACP;AACc;AAOhD;IAiBE,2BAAY,GAAQ,EAAE,IAAY,EAAE,MAAc;QAAlD,iBA8BC;QA5CO,sBAAiB,GAAG,IAAI,4CAAO,EAAO,CAAC;QACvC,yBAAoB,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;QAE7D,8BAAyB,GAAG,IAAI,4CAAO,EAAO,CAAC;QAC/C,iCAA4B,GAAG,IAAI,CAAC,yBAAyB,CAAC,YAAY,EAAE,CAAC;QAE7E,mCAA8B,GAAG,IAAI,4CAAO,EAAO,CAAC;QACpD,sCAAiC,GAAG,IAAI,CAAC,8BAA8B,CAAC,YAAY,EAAE,CAAC;QAEvF,kCAA6B,GAAG,IAAI,4CAAO,EAAO,CAAC;QACnD,sCAAiC,GAAoB,IAAI,CAAC,6BAA6B,CAAC,YAAY,EAAE,CAAC;QAK7G,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,cAAc,CAAC;QAEzC,IAAI,CAAC,MAAM,GAAG,uDAAE,CAAI,MAAM,CAAC,cAAc,qBAAkB,CAAC,CAAC;QAE7D,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,yBAAyB,EAAE;YACxC,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC;gBACZ,KAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;YAChC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,0BAA0B,EAAE,UAAC,KAAK;YAC/C,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC;gBACZ,KAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACjD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,qBAAqB,EAAE,UAAC,OAAO;YAC5C,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC;gBACZ,KAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/C,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,2BAA2B,EAAE;YAC1C,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC;gBACZ,KAAI,CAAC,8BAA8B,CAAC,IAAI,EAAE,CAAC;YAC7C,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAEK,0CAAc,GAApB,UAAqB,OAAoB;;;;;;4BACI,qBAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EAAC,OAAO,WAAC,CAAC;;wBAAzG,UAAU,GAA2B,SAAoE;wBAE/G,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,oBAAU;4BACjC,IAAI,UAAU,CAAC,eAAe,IAAI,UAAU,CAAC,eAAe,CAAC,YAAY,EAAE,GAAE;4BAC7E,KAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;wBACzC,CAAC,CAAC,CAAC;wBAEH,sBAAO,UAAU,EAAC;;;;KACnB;IAED,+CAAmB,GAAnB,UAAoB,IAAe;QACjC,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC;IAEH;;OAEG;IACD,gDAAoB,GAApB,UAAqB,IAAsB;QACzC,IAAI,CAAC,4BAA4B,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACpD,CAAC;IAED;;;OAGG;IACH,oDAAwB,GAAxB,UAAyB,IAA2C;QAClE,IAAI,CAAC,iCAAiC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACzD,CAAC;IAED;;;OAGG;IACH,+CAAmB,GAAnB,UAAoB,IAAe;QACjC,IAAI,CAAC,iCAAiC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACzD,CAAC;IAED,iDAAqB,GAArB,UAAsB,UAAsB;QAC1C,IAAM,IAAI,GAAG;YACX,WAAW,EAAE,KAAK;YAClB,cAAc,EAAE,KAAK;SACtB,CAAC;QAEF,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC;QAExB,8EAA8E;QAC9E,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAE3B,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE;YAC/B,OAAO;SACR;QAED,IAAI,QAAQ,GAAG,UAAU,CAAC,eAAe,CAAC,MAAM,CAAC;QAEjD,IAAI,gBAAgB,GAAG,CAAC,CAAC,kFAAiB,CAAC,eAAe,EAAE,kFAAiB,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAEjH,KAAK,IAAM,IAAI,IAAI,UAAU,EAAE;YAC7B,IAAI,IAAI,KAAK,gFAAe,CAAC,MAAM,IAAI,gBAAgB,EAAE;gBACvD,IAAI,CAAC,IAAI,CAAC,GAAG;oBACX,UAAU,EAAE,IAAI;iBACjB,CAAC;gBACF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;aACzB;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,GAAG;oBACX,UAAU,EAAE,KAAK;iBAClB,CAAC;aACH;SACF;IACH,CAAC;IAED,4CAAgB,GAAhB,UAAiB,YAAY,EAAE,UAAkD;QAC/E,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC;YAC3D,YAAY;YACZ,UAAU;SACX,CAAC,CAAC;IACL,CAAC;IAED,mDAAuB,GAAvB,UAAwB,OAAuE;QAC7F,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC;YAClE,cAAc,EAAE,OAAO,CAAC,cAAc;YACtC,MAAM,EAAE,OAAO,CAAC,MAAM;YACtB,OAAO,EAAE;gBACP,UAAU,EAAE,OAAO,CAAC,UAAU;aAC/B;SACF,CAAC,CAAC;IACL,CAAC;IAED,6CAAiB,GAAjB,UAAkB,OAAqE;QACrF,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;IACzE,CAAC;IAED,2DAA+B,GAA/B,UAAgC,IAAoB;QAClD,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,+BAA+B,CAAC;YAC1E,IAAI;SACL,CAAC,CAAC;IACL,CAAC;IAED,mDAAuB,GAAvB,UAAwB,IAAqB;QAC3C,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC;YAClE,IAAI;SACL,CAAC,CAAC;IACL,CAAC;IAED,oDAAwB,GAAxB,UAAyB,cAAc,EAAE,SAAS;QAChD,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC;YACnE,cAAc;YACd,SAAS;SACV,CAAC,CAAC;IACL,CAAC;IA9JU,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAkBiB,uDAAG,EAAQ,oDAAM,EAAU,6DAAM;OAjBvC,iBAAiB,CA+J7B;IAAD,wBAAC;CAAA;AA/J6B;;;;;;;;;;;;ACb9B,+DAA+D,mL;;;;;;;;;;;ACA/D,sCAAsC,kBAAkB,qRAAqR,YAAY,mOAAmO,eAAe,4TAA4T,gCAAgC,2DAA2D,6YAA6Y,sCAAsC,yJ;;;;;;;;;;;;;;;;;;;;ACA31C;AACF;AAG2B;AAClB;AAOjE;IAaE,gCAAY,iBAAoC,EAAE,IAAY;QARvD,SAAI,GAAU;YACnB,EAAC,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAC;YACzD,EAAC,KAAK,EAAE,gBAAgB,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,EAAC;YAC5D,EAAC,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,mBAAmB,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAC,EAA0B;wBAAzB,oBAAO,EAAE,oCAAe;oBACrG,OAAO,wFAAuB,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;gBAC3D,CAAC,EAAC;SACH,CAAC;QAGA,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAC3C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAEK,yCAAQ,GAAd;;;;;4BACE,qBAAM,IAAI,CAAC,uBAAuB,EAAE;;wBAApC,SAAoC,CAAC;wBACrC,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC;4BACzC,KAAI,CAAC,uBAAuB,EAAE,CAAC;wBACjC,CAAC,CAAC,CAAC;;;;;KACJ;IAEK,wDAAuB,GAA7B;;;;;;wBACE,SAAI;wBAAwB,qBAAM,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,CAAC,sFAAc,CAAC,EAAE,CAAC;;wBAAnG,GAAK,oBAAoB,GAAG,SAAuE,CAAC;wBACpG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,UAAC,OAAO,EAAE,UAAU;4BACrE,IAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,gBAAM,IAAI,aAAM,CAAC,KAAK,KAAK,UAAU,CAAC,SAAS,EAArC,CAAqC,CAAC,CAAC;4BAEhF,IAAI,CAAC,SAAS,EAAE;gCACd,OAAO,CAAC,IAAI,CAAC;oCACX,KAAK,EAAE,UAAU,CAAC,SAAS;oCAC3B,KAAK,EAAE,UAAU,CAAC,SAAS;iCAC5B,CAAC,CAAC;6BACJ;4BAED,OAAO,OAAO,CAAC;wBACjB,CAAC,EAAE,EAAE,CAAC,CAAC;;;;;KACR;IAED,iDAAgB,GAAhB,UAAiB,EAAgC;YAA/B,gCAAa,EAAE,oCAAe;QAC9C,OAAO,wFAAuB,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;IACjE,CAAC;IAED,yDAAwB,GAAxB,UAAyB,OAAuF;QAAhH,iBAIC;QAHC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YACZ,OAAO,KAAI,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,OAAO,CAAC,cAAc,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;QACpG,CAAC,CAAC,CAAC;IACL,CAAC;IAjDU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,4IAA+C;;SAEhD,CAAC;+EAc+B,qEAAiB,EAAQ,oDAAM;OAbnD,sBAAsB,CAkDlC;IAAD,6BAAC;CAAA;AAlDkC;;;;;;;;;;;;;;;;;;ACZM;AAKzC;IAEE;QADQ,WAAM,GAAG,iBAAiB,CAAC;IAEnC,CAAC;IAED,qCAAO,GAAP,UAAQ,GAAG;QACT,GAAG,GAAM,IAAI,CAAC,MAAM,SAAI,GAAK,CAAC;QAE9B,IAAI,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAEpC,IAAI,GAAG,EAAE;YACP,IAAI;gBACF,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACvB;YAAC,OAAO,GAAG,EAAE;gBACZ,QAAQ;aACT;SACF;QAED,IAAM,WAAW,GAAQ,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAE3C,yCAAyC;QACzC,IAAI,WAAW,IAAI,GAAG,EAAE;YACtB,OAAO,WAAW,CAAC;SACpB;QAED,IAAI,GAAG,KAAK,MAAM,EAAE;YAClB,OAAO,IAAI,CAAC;SACb;aAAM,IAAI,GAAG,KAAK,OAAO,EAAE;YAC1B,OAAO,KAAK,CAAC;SACd;QAED,OAAO,GAAG,CAAC;IACb,CAAC;IAED,qCAAO,GAAP,UAAQ,GAAG,EAAE,KAAK;QAChB,GAAG,GAAM,IAAI,CAAC,MAAM,SAAI,GAAK,CAAC;QAE9B,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACvF,CAAC;IAED,wCAAU,GAAV,UAAW,GAAG;QACZ,GAAG,GAAM,IAAI,CAAC,MAAM,SAAI,GAAK,CAAC;QAE9B,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IA5CU,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,mBAAmB,CA6C/B;IAAD,0BAAC;CAAA;AA7C+B;;;;;;;;;;;;ACLhC,+DAA+D,mJ;;;;;;;;;;;ACA/D,iH;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,4GAAwC;;SAEzC,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;ACP9B,+DAA+D,2L;;;;;;;;;;;ACA/D,sCAAsC,kBAAkB,iSAAiS,YAAY,uMAAuM,eAAe,0TAA0T,wEAAwE,2DAA2D,se;;;;;;;;;;;;;;;;;;;;ACAt8B;AACsB;AAEjB;AAQvD;IAkBE,kCAAY,iBAAoC;QAdzC,SAAI,GAAU;YACnB,EAAC,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAC;YACzD,EAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,EAAC;YAClD,EAAC,KAAK,EAAE,gBAAgB,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,EAAC;YAC5D,EAAC,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,mBAAmB,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAC,EAA8B;wBAA7B,oBAAO,EAAE,uBAAmB;oBACzG,IAAI,EAAE,EAAE;wBACN,OAAU,OAAO,cAAS,EAAE,CAAC,MAAM,SAAI,EAAE,CAAC,WAAa,CAAC;qBACzD;oBACD,OAAO,OAAO,CAAC;gBACjB,CAAC,EAAC;YACF,EAAC,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,wBAAwB,EAAE,UAAU,EAAE,KAAK,EAAC;YAC3E,EAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAC;SACvD,CAAC;QAGA,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;IAC7C,CAAC;IAEK,2CAAQ,GAAd;;;;;4BACE,qBAAM,IAAI,CAAC,uBAAuB,EAAE;;wBAApC,SAAoC,CAAC;wBACrC,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC;4BACzC,KAAI,CAAC,uBAAuB,EAAE,CAAC;wBACjC,CAAC,CAAC,CAAC;;;;;KACJ;IAEK,0DAAuB,GAA7B;;;;;;wBACE,SAAI;wBAAwB,qBAAM,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,EAAE;;wBAAlF,GAAK,oBAAoB,GAAG,SAAsD,CAAC;wBACnF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,UAAC,OAAO,EAAE,UAAU;4BACrE,IAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,gBAAM,IAAI,aAAM,CAAC,KAAK,KAAK,UAAU,CAAC,SAAS,EAArC,CAAqC,CAAC,CAAC;4BAEhF,IAAI,CAAC,SAAS,EAAE;gCACd,OAAO,CAAC,IAAI,CAAC;oCACX,KAAK,EAAE,UAAU,CAAC,SAAS;oCAC3B,KAAK,EAAE,UAAU,CAAC,SAAS;iCAC5B,CAAC,CAAC;6BACJ;4BAED,OAAO,OAAO,CAAC;wBACjB,CAAC,EAAE,EAAE,CAAC,CAAC;;;;;KACR;IA3CU,wBAAwB;QANpC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,oJAAiD;YAEjD,SAAS,EAAE,CAAC,0DAAc,CAAC;;SAC5B,CAAC;+EAmB+B,uFAAiB;OAlBrC,wBAAwB,CA6CpC;IAAD,+BAAC;CAAA;AA7CoC;;;;;;;;;;;;;;;;;;;;;ACXI;AACM;AAC4C;AAC/B;AAY5D;IAAA;IAAiC,CAAC;IAArB,iBAAiB;QAV7B,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,uGAAwB,CAAC;YACxC,OAAO,EAAE;gBACP,4DAAY;gBACZ,yEAAmB;aACpB;YACD,OAAO,EAAE;gBACP,uGAAwB;aACzB;SACF,CAAC;OACW,iBAAiB,CAAI;IAAD,wBAAC;CAAA;AAAJ;;;;;;;;;;;;ACf9B,+DAA+D,+I;;;;;;;;;;;ACA/D,o7CAAo7C,wDAAwD,sEAAsE,wBAAwB,GAAG,wBAAwB,i5D;;;;;;;;;;;;;;;;;;;ACAnjD;AACQ;AAEnB;AAOvC;IAKE,0BAAY,WAAwB,EAAE,MAAc;QAClD,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;IACvD,CAAC;IAED,mCAAQ,GAAR;IACA,CAAC;IAEM,kCAAO,GAAd,UAAe,KAAa;QAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IAChC,CAAC;IAjBU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,yGAAuC;;SAExC,CAAC;+EAMyB,uEAAW,EAAU,sDAAM;OALzC,gBAAgB,CAmB5B;IAAD,uBAAC;CAAA;AAnB4B;;;;;;;;;;;;;ACR7B;AAAA;AAAO,SAAS,uBAAuB,CAAC,OAAO,EAAE,eAAgC;IAC/E,IAAI,eAAe,EAAE;QACnB,OAAU,OAAO,cAAS,eAAe,CAAC,MAAM,SAAI,eAAe,CAAC,WAAa,CAAC;KACnF;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;;;;;;;;;;;;;ACPD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACXpC,e","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-sidebar *ngIf=\\\"userService.isUserLoggedIn()\\\">\\n  <router-outlet></router-outlet>\\n</app-sidebar>\\n\"","import {Component} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {UserService} from './authorization/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'hermes-packages-web';\n  sideBarVisible = true;\n  public userService: UserService;\n\n  constructor(public translate: TranslateService, userService: UserService) {\n    this.userService = userService;\n    translate.addLangs(['en']);\n    translate.setDefaultLang('en');\n\n    const browserLang = translate.getBrowserLang();\n    translate.use(browserLang.match(/en|fr/) ? browserLang : 'en');\n  }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule, APP_INITIALIZER} from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport {AppComponent} from './app.component';\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\nimport {AuthenticationModule} from './authorization/authentication.module';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {Api} from './common/api.service';\nimport {DeploymentModule} from './deployment/deployment.module';\nimport {DeploymentListComponent} from './deployment/deployment-list/deployment-list.component';\nimport {LoginGuard} from './authorization/login.guard';\nimport {ServerStateListComponent} from './server-state/server-state-list/server-state-list.component';\nimport {ServerStateModule} from './server-state/server-state.module';\nimport { OverviewComponent } from './overview/overview.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport {DeploymentListPullRequestComponent} from './deployment/deployment-list/deployment-list-pr.component';\nimport {DeploymentListReleaseCandidateComponent} from './deployment/deployment-list/deployment-list-rc.component';\nimport {TranslateModule, TranslateLoader} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\n\nexport function initializeApp(api: Api) {\n  return (): Promise<any> => {\n    return api.initialize();\n  };\n}\n\nexport function HttpLoaderFactory(httpClient: HttpClient) {\n  return new TranslateHttpLoader(httpClient);\n}\n\nconst appRoutes: Routes = [\n  { path: 'deployments/pull-request', component: DeploymentListPullRequestComponent, canActivate: [LoginGuard] },\n  { path: 'deployments/release-candidate', component: DeploymentListReleaseCandidateComponent, canActivate: [LoginGuard] },\n  { path: 'deployments/:deploymentType', component: DeploymentListComponent, canActivate: [LoginGuard] },\n  { path: 'servers', component: ServerStateListComponent, canActivate: [LoginGuard] },\n  { path: 'overview', component: OverviewComponent, canActivate: [LoginGuard] },\n  { path: '**', redirectTo: '/deployments/pull-request', canActivate: [LoginGuard] }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OverviewComponent,\n    SidebarComponent\n  ],\n  imports: [\n    RouterModule.forRoot(\n      appRoutes,\n      {enableTracing: false}\n    ),\n    BrowserModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n    BrowserAnimationsModule,\n    /* Custom */\n    AuthenticationModule,\n    DeploymentModule,\n    ServerStateModule\n  ],\n  providers: [\n    {provide: APP_INITIALIZER, useFactory: initializeApp, deps: [Api], multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  exports: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class AuthenticationModule { }\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {CanActivate} from '@angular/router/src/utils/preactivation';\nimport {UserService} from './user.service';\nimport {Config} from '../common/config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuard implements CanActivate {\n  public path: ActivatedRouteSnapshot[];\n  public route: ActivatedRouteSnapshot;\n\n  constructor(private userService: UserService, private config: Config) {\n  }\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n    let session = await this.userService.getUserSession();\n\n    if (!session.user) {\n      window.location.href = `${this.config.locationOrigin}/api/authorize`;\n      return false;\n    }\n\n    return true;\n  }\n}\n","import {Injectable, NgZone} from '@angular/core';\nimport {Api} from '../common/api.service';\nimport {LocalStorageService} from '../local-storage.service';\nimport {Router} from '@angular/router';\nimport {Config} from '../common/config.service';\nimport {UserProfile} from '../common/models/domain/UserProfile';\nimport {HttpClient} from '@angular/common/http';\nimport {resolve} from 'url';\n\nconst Keys = {\n  USER_LOGGED_IN_KEY: 'isUserLoggedIn',\n  TOKEN_EXPIRES_AT: 'tokenExpiresAt',\n  ACCESS_TOKEN: 'accessToken',\n  USER_PROFILE: 'userProfile'\n};\n\ndeclare const gapi: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private api: Api;\n  private localStorageService: LocalStorageService;\n  private router: Router;\n  private  zone: NgZone;\n  private config: Config;\n  private http: HttpClient;\n\n  constructor(api: Api, config: Config, localStorageService: LocalStorageService, router: Router, zone: NgZone, http: HttpClient) {\n    this.api = api;\n    this.config = config;\n    this.localStorageService = localStorageService;\n    this.zone = zone;\n    this.router = router;\n    this.http = http;\n    this.api.setRequestInterceptor(this.getRequestInterceptor());\n    this.api.setResponseInterceptor(this.getResponseInterceptor());\n  }\n\n  private initAuth2() {\n    return new Promise((resolve, reject) => {\n      return gapi.load('auth2', () => {\n        gapi.auth2.init({\n          client_id: this.config.githubApiClientId,\n          cookiepolicy: 'single_host_origin',\n          scope: 'profile email',\n          access_type: 'offline',\n          prompt: 'consent select_account',\n          hosted_domain: 'hermes.com'\n        });\n\n        resolve();\n      });\n    });\n  }\n\n  public reanderLoginButton({redirectOnLogin}) {\n    return this.initAuth2().then(() => {\n      return gapi.signin2.render('googleBtn', {\n        scope: 'profile email',\n        width: 240,\n        height: 50,\n        longtitle: true,\n        theme: 'dark',\n        onsuccess: (googleUser) => {\n          this.handleLogin(googleUser, redirectOnLogin);\n        }\n      });\n    });\n  }\n\n  private handleLogin(googleUser, redirectOnLogin) {\n    this.zone.run(() => {\n      if (!this.isUserLoggedIn()) {\n        this.localStorageService.setItem(Keys.USER_LOGGED_IN_KEY, true);\n      }\n\n      this.setCurrentCredentials();\n\n      this.router.navigate([redirectOnLogin]);\n    });\n  }\n\n  /**\n   * Check if the current token is about to expire\n   */\n  private isExpiringAccessToken(): boolean {\n    const tokenExpireTime = this.localStorageService.getItem(Keys.TOKEN_EXPIRES_AT);\n\n    if (new Date().getTime() < (tokenExpireTime + 20)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * If required, will refresh the access token\n   */\n  private async refreshAccessToken() {\n    await this.initAuth2();\n\n    return gapi.auth2.getAuthInstance().currentUser.get().reloadAuthResponse().then(() => {\n      const {accessToken} = this.setCurrentCredentials();\n      this.localStorageService.setItem(Keys.ACCESS_TOKEN, accessToken);\n      return accessToken;\n    });\n  }\n\n  private setCurrentCredentials() {\n    const currentUser = gapi.auth2.getAuthInstance().currentUser.get();\n    const profile = currentUser.getBasicProfile();\n    const userEmail = profile.getEmail();\n\n    const authRes = currentUser.getAuthResponse();\n    const accessToken = authRes.id_token;\n\n    this.localStorageService.setItem(Keys.ACCESS_TOKEN, accessToken);\n    this.localStorageService.setItem(Keys.TOKEN_EXPIRES_AT, authRes.expires_at);\n    this.localStorageService.setItem(Keys.USER_PROFILE, {\n      email: userEmail,\n      firstName: profile.getGivenName(),\n      lastName: profile.getFamilyName(),\n      imageUrl: profile.getImageUrl()\n    });\n\n    return {\n      userEmail,\n      accessToken\n    };\n  }\n\n  getUserProfile(): UserProfile {\n    return this.localStorageService.getItem(Keys.USER_PROFILE);\n  }\n\n/*   public loginUser(userEmail: string, {accessToken, expiresAt}: {accessToken: string, expiresAt: number}) {\n    return this.api.userApi.login(userEmail, accessToken).then(() => {\n      this.localStorageService.setItem(USER_LOGGED_IN_KEY, true);\n      this.localStorageService.setItem(TOKEN_EXPIRES_AT, expiresAt);\n    });\n  } */\n\n  isUserLoggedIn(): boolean {\n    return true;\n    return this.localStorageService.getItem(Keys.USER_LOGGED_IN_KEY) as boolean;\n  }\n\n  private getAccessToken() {\n    return this.localStorageService.getItem('accessToken');\n  }\n\n  async getUserSession(): Promise<{user?: object}> {\n    let session: {user?: object} = await this.api.userApi.getSession();\n\n    if (session.user) {\n      this.localStorageService.setItem(Keys.USER_PROFILE, session.user)\n    }\n\n    return session;\n  }\n\n  private getRequestInterceptor() {\n    return async (req) => {\n      let accessToken = this.getAccessToken();\n\n      if (accessToken) {\n        if (this.isExpiringAccessToken()) {\n          accessToken = await this.refreshAccessToken();\n        }\n\n        req.headers['access-token'] = accessToken;\n      }\n\n      return req;\n    };\n  }\n\n  private getResponseInterceptor() {\n    return (res) => {\n      const accessToken = res.headers['access-token'];\n\n      if (accessToken) {\n        this.localStorageService.setItem('accessToken', accessToken);\n      }\n\n      return res;\n    };\n  }\n}\n","import {Injectable} from '@angular/core';\nimport Swagger from 'swagger-client/browser';\nimport {LoadingMaskService} from './loading-mask.service';\nimport {Config} from './config.service';\n\nSwagger.http.withCredentials = true;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Api {\n  public clientInstance: Swagger;\n  private loadinMaskService: LoadingMaskService;\n  private config: Config;\n  private requestInterceptors: ((req: any) => any)[] = [];\n  private responseInterceptors: ((req: any) => any)[] = [];\n  userApi: UserApi;\n\n  constructor(loadinMaskService: LoadingMaskService, config: Config) {\n    this.loadinMaskService = loadinMaskService;\n    this.config = config;\n\n    this.requestInterceptors.push(req => {\n      this.loadinMaskService.showLoadingMask();\n      return req;\n    });\n\n    this.responseInterceptors.push(res => {\n      this.loadinMaskService.hideLoadingMask();\n\n      if (res.ok === false && res.body && res.body.message) {\n        res.statusText = res.body.message;\n        return res;\n      }\n\n      return res;\n    });\n  }\n\n  setRequestInterceptor(reqInterceptor: (req: any) => any) {\n    this.requestInterceptors.push(reqInterceptor);\n  }\n\n  setResponseInterceptor(resInterceptor: (req: any) => any) {\n    this.responseInterceptors.push(resInterceptor);\n  }\n\n  async initialize() {\n    await this.config.initialize();\n\n\n    let spec = await fetch(this.config.apiDocsUrl).then(r => r.json());\n\n    spec.schemes = [\n      location.protocol.startsWith('https') ? 'https' : 'http'\n    ];\n\n    this.clientInstance = await Swagger({\n      url: this.config.apiDocsUrl,\n      spec,\n      requestInterceptor: (req) => {\n        req.headers['content-type'] = 'application/json';\n\n        return this.requestInterceptors.reduce((request, interceptor) => {\n          request = interceptor(request);\n          return request;\n        }, req);\n      },\n      responseInterceptor: (res) => {\n        return this.responseInterceptors.reduce((response, interceptor) => {\n          response = interceptor(response);\n          return response;\n        }, res);\n      },\n    });\n\n    // override apis and use ZoneAware promise for the result\n    for (const apiKey in this.clientInstance.apis) {\n      const api = this.clientInstance.apis[apiKey];\n\n      for (const apiMethodKey in api) {\n        const fn = api[apiMethodKey];\n\n        api[apiMethodKey] = function() {\n          return Promise.resolve(fn.apply(api, arguments).then(function(res) {\n            if (res.obj && res.obj.data) {\n              return res.obj.data;\n            }\n            return res;\n          }));\n        };\n      }\n    }\n\n    this.userApi = new UserApi(this.clientInstance);\n  }\n}\n\nclass UserApi {\n  private clientInstance: Swagger;\n  constructor(clientInstance: Swagger) {\n    this.clientInstance = clientInstance;\n  }\n  async login(email, accessToken): Promise<void> {\n    return this.clientInstance.apis.user.login({\n      email,\n      accessToken,\n      payload: {\n        accessToken\n      }\n    });\n  }\n\n  getSession() {\n    return this.clientInstance.apis.user.getSession();\n  }\n}\n","import { NgModule, Pipe, PipeTransform } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoadingMaskComponent } from './loading-mask/loading-mask.component';\nimport {ToastModule} from 'primeng/toast';\nimport {CheckboxModule} from 'primeng/checkbox';\nimport {ButtonModule} from 'primeng/button';\nimport {TableModule} from 'primeng/table';\nimport {MultiSelectModule} from 'primeng/multiselect';\nimport {DropdownModule} from 'primeng/dropdown';\nimport {InputTextModule} from 'primeng/inputtext';\nimport {FormsModule} from '@angular/forms';\nimport {EditableRow} from 'primeng/table';\nimport {DialogModule} from 'primeng/dialog';\nimport {RadioButtonModule} from 'primeng/radiobutton';\nimport {TranslateModule} from '@ngx-translate/core';\n\n\n@NgModule({\n  declarations: [LoadingMaskComponent],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    EditableRow\n  ],\n  exports: [\n    LoadingMaskComponent,\n    ToastModule,\n    CheckboxModule,\n    ButtonModule,\n    TableModule,\n    MultiSelectModule,\n    DropdownModule,\n    InputTextModule,\n    FormsModule,\n    InputTextModule,\n    DialogModule,\n    RadioButtonModule,\n    HttpClientModule,\n    TranslateModule\n  ]\n})\nexport class PackageCommonModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\nimport {Observable, ObservableInput} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Config {\n  private http: HttpClient;\n  public locationOrigin: string;\n  public apiUrl: string;\n  public apiDocsUrl: string;\n  public githubApiClientId: string;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n    this.locationOrigin = location.origin.includes('localhost') ? 'http://localhost:8090' : location.origin;\n    this.apiUrl = `${this.locationOrigin}/api`;\n    this.apiDocsUrl = `${this.apiUrl}/api-docs`;\n  }\n\n  async initialize() {\n    this.http.get(`${this.locationOrigin}/api/config`).toPromise().then(({githubApiClientId}: any) => {\n      this.githubApiClientId = githubApiClientId;\n    });\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Subject, Observable} from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingMaskService {\n  private subject: Subject<any>;\n  private observable: Observable<any>;\n  constructor() {\n    this.subject = new Subject<any>();\n    this.observable = this.subject.asObservable();\n  }\n\n  public onStateChange(func: (isVisible: boolean) => any) {\n    this.observable.subscribe(func);\n  }\n\n  public showLoadingMask() {\n    this.subject.next(true);\n  }\n\n  public hideLoadingMask() {\n    this.subject.next(false);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9sb2FkaW5nLW1hc2svbG9hZGluZy1tYXNrLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div [hidden]=\\\"!isVisible\\\">\\n  <div class=\\\"overlay ng-scope\\\" test-id=\\\"loader\\\">\\n    <div class=\\\"content\\\">\\n      <div class=\\\"ui text loader active ng-binding\\\">\\n        <div class=\\\"lds-spinner\\\">\\n          <div></div>\\n          <div></div>\\n          <div></div>\\n          <div></div>\\n          <div></div>\\n          <div></div>\\n          <div></div>\\n          <div></div>\\n          <div></div>\\n          <div></div>\\n          <div></div>\\n          <div></div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, NgZone } from '@angular/core';\nimport {LoadingMaskService} from '../loading-mask.service';\n\n@Component({\n  selector: 'app-loading-mask',\n  templateUrl: './loading-mask.component.html',\n  styleUrls: ['./loading-mask.component.css']\n})\nexport class LoadingMaskComponent implements OnInit {\n  private loadingMaskService: LoadingMaskService;\n  private zone: NgZone;\n  public isVisible: boolean;\n  constructor(loadingMaskService: LoadingMaskService, zone: NgZone) {\n    this.loadingMaskService = loadingMaskService;\n    this.zone = zone;\n\n    this.loadingMaskService.onStateChange(isVisible => {\n      this.zone.run(() => {\n        this.isVisible = isVisible;\n      });\n    });\n  }\n\n  ngOnInit() {\n  }\n}\n","export enum DeploymentBand {\n  DEVELOP = 'develop',\n  RELEASE = 'release',\n  PRODUCTION = 'production',\n  QA = 'qa'\n}\n\nexport enum DeploymentStatus {\n  DONE = 'Done',\n  TODO = 'To Do',\n  IN_PROGRESS = 'In Progress',\n  IN_REVIEW = 'In Review',\n  IN_QA = 'In QA',\n  MERGING_BLOCKED = 'Merging blocked'\n}\n\nexport interface Deployment {\n  id: string;\n  version: string;\n  name: string;\n  band: DeploymentBand;\n  serverTag?: string;\n  jiraStatus: {id: string, name: DeploymentStatus};\n  isHotfix?: boolean;\n  iosCfBundleId?: string;\n  androidVersionCode?: string;\n  pullRequestMeta?: PullRequestMeta;\n  isMobileApplicationDeployment?: boolean;\n  downloadLink?: string;\n  transitionList?: {id: string, name: string}[];\n  isMergingBlocked?: boolean;\n  createdAt: string;\n  updatedAt: string;\n  $meta: object;\n}\n\nexport enum DeploymentField {\n  Name = 'name',\n  Review = 'review',\n  Status = 'jiraStatus',\n  IsPullRequest = 'isPullRequest'\n}\n\nexport enum PullRequestStatus {\n  PENDING_REVIEW = 'pending_review',\n  MERGING_BLOCKED = 'merging-blocked',\n  MERGED = 'merged'\n}\n\nexport interface PullRequestMeta {\n  status: PullRequestStatus;\n  actualCommit: string;\n  actualCommitAuthor: string;\n  actualCommitAuthorEmail: string;\n  pullDescription: string;\n  pullId: string;\n  pullLink: string;\n  jiraLink: string;\n  pullTitle: string;\n  sourceBranch: string;\n  targetBranch: string;\n  sha1: string;\n  issueNumber: string;\n}\n\nexport interface DeploymentStatusEvent {\n  eventName: string;\n  action: 'start' | 'end';\n  issueNumber: string;\n  pullId: string;\n  sourceBranch: string;\n  targetBranch: string;\n}\n","import {Deployment} from '../domain/Deployment';\nimport {SelectItem} from 'primeng/components/common/selectitem';\n\nexport interface PresentationDeployment extends Deployment {\n  presentationTransitionList: SelectItem[];\n}\n\nexport abstract class DeploymentMapper {\n  static toPresentationDeploymentList(deployments: Deployment[]): PresentationDeployment[] {\n    return deployments.map(this.toPresentationDeployment);\n  }\n\n  static toPresentationDeployment(deployment: Deployment): PresentationDeployment {\n    deployment = JSON.parse(JSON.stringify(deployment));\n    const presentationDeployment = Object.assign({}, deployment) as PresentationDeployment;\n\n    if (presentationDeployment.transitionList) {\n      presentationDeployment.presentationTransitionList = [];\n\n      presentationDeployment.transitionList.forEach(transition => {\n        presentationDeployment.presentationTransitionList.push({value: transition.id, label: transition.name});\n      });\n    }\n\n    return presentationDeployment;\n  }\n}\n","import {Deployment} from 'src/app/common/models/domain/Deployment';\n\nexport enum ColumnMode {\n  RELEASE_CANDIDATE = 'release-candidate',\n  PULL_REQUEST = 'pull-request'\n}\n\nconst SharedColumn = {\n  NAME: {\n    field: 'name', header: 'Name', isEditable: false, isSortable: true\n  },\n  VERSION: {\n    field: 'version', header: 'Version', isEditable: false, renderer: (row: Deployment) => {\n      return `<a target=\"_blank\" href=\"${row.downloadLink}\">${row.version}</a>`;\n    }\n  },\n};\n\nexport class ColumnFactory {\n  static getColumns(mode: ColumnMode) {\n    if (mode === ColumnMode.PULL_REQUEST) {\n      return this.getPullRequestColumns();\n    }\n    return this.getReleaseCandidateColumns();\n  }\n\n  private static getReleaseCandidateColumns() {\n    return [\n      SharedColumn.NAME,\n      SharedColumn.VERSION,\n      {field: 'serverTags', header: 'Servers', isEditable: false}\n    ];\n  }\n\n  private static getPullRequestColumns() {\n    return [\n      SharedColumn.NAME,\n      SharedColumn.VERSION,\n      {\n        field: 'pullRequestMeta.jiraLink', header: 'Jira number', isEditable: false, renderer(row: Deployment) {\n          if (!row.pullRequestMeta) {\n            return '';\n          }\n          return `<a target=\"_blank\" href=\"${row.pullRequestMeta.jiraLink}\">${row.pullRequestMeta.issueNumber}</a>`;\n        }\n      },\n      {field: 'jiraStatus.name', header: 'Jira status', isEditable: true},\n      {field: 'pullRequestMeta.targetBranch', header: 'Target branch', isEditable: false, renderer(row: Deployment) {\n         return `<div class=\"no-wrap\">${row.pullRequestMeta.targetBranch} &#x2190; ${row.pullRequestMeta.sourceBranch}</div`;\n      } },\n      {field: 'pullRequestMeta.status', header: 'Pull request status', isEditable: false},\n      {\n        field: 'pullRequestMeta.pullLink', header: 'Description', isEditable: false, renderer(row: Deployment) {\n          if (!row.pullRequestMeta) {\n            return '';\n          }\n          return `<a target=\"_blank\" href=\"${row.pullRequestMeta.pullLink}\">${row.pullRequestMeta.pullTitle}</a>`;\n        }\n      }\n    ];\n  }\n}\n","import {Component} from '@angular/core';\nimport {MessageService} from 'primeng/api';\nimport {DeploymentListComponent, DeploymentType} from './deployment-list.component';\nimport {DeploymentBand} from 'src/app/common/models/domain/Deployment';\n\n@Component({\n  selector: 'app-pr-deployment-list',\n  templateUrl: './deployment-list.component.html',\n  styleUrls: ['./deployment-list.component.scss'],\n  providers: [MessageService]\n})\nexport class DeploymentListPullRequestComponent extends  DeploymentListComponent {\n  deploymentType = DeploymentType.PULL_REQUEST;\n  isFilteredMode = true;\n  installBand = DeploymentBand.QA;\n  showServerState = true;\n}\n","import {Component, OnInit} from '@angular/core';\nimport {DeploymentService} from '../deployment.service';\nimport {MessageService} from 'primeng/api';\nimport {DeploymentListComponent, DeploymentType} from './deployment-list.component';\nimport {DeploymentBand} from 'src/app/common/models/domain/Deployment';\n\n@Component({\n  selector: 'app-rc-deployment-list',\n  templateUrl: './deployment-list.component.html',\n  styleUrls: ['./deployment-list.component.scss'],\n  providers: [MessageService]\n})\nexport class DeploymentListReleaseCandidateComponent extends  DeploymentListComponent {\n  deploymentType = DeploymentType.RELEASE_CANDIDATE;\n  isFilteredMode = true;\n  installBand = DeploymentBand.PRODUCTION;\n}\n","module.exports = \"<p-toast [style]=\\\"{marginTop: '80px'}\\\"></p-toast>\\n\\n<p-toast position=\\\"center\\\" key=\\\"c\\\" [modal]=\\\"true\\\" [baseZIndex]=\\\"5000\\\">\\n    <ng-template let-message pTemplate=\\\"message\\\">\\n        <div style=\\\"text-align: center\\\">\\n            <i class=\\\"pi pi-exclamation-triangle\\\" style=\\\"font-size: 3em\\\"></i>\\n            <h3>{{message.summary}}</h3>\\n            <p>{{message.detail}}</p>\\n        </div>\\n        <div class=\\\"ui-g ui-fluid\\\">\\n            <div class=\\\"ui-g-6\\\">\\n                <button type=\\\"button\\\" pButton label=\\\"Yes\\\" class=\\\"ui-button-success\\\"></button>\\n            </div>\\n            <div class=\\\"ui-g-6\\\">\\n                <button type=\\\"button\\\" pButton label=\\\"No\\\" class=\\\"ui-button-secondary\\\"></button>\\n            </div>\\n        </div>\\n    </ng-template>\\n</p-toast>\\n\\n<p-table #dt [columns]=\\\"cols\\\" [value]=\\\"deployments\\\" [lazy]=\\\"true\\\" (onLazyLoad)=\\\"loadDeployments($event)\\\"\\n    [totalRecords]=\\\"totalDeployments\\\" [loading]=\\\"loadingDeployments\\\" [rowsPerPageOptions]=\\\"[10,20,30]\\\"\\n    [paginator]=\\\"true\\\" [rows]=\\\"10\\\" dataKey=\\\"id\\\" editMode=\\\"row\\\" >\\n  <ng-template pTemplate=\\\"caption\\\" >\\n    <div style=\\\"text-align: right\\\" *ngIf=\\\"!isFilteredMode\\\">\\n        <div class=\\\"ui-g-12\\\">\\n        <h3 class=\\\"first\\\">Deployment type</h3>\\n        <p-dropdown [options]=\\\"deploymentTypes\\\"\\n        (onChange)=\\\"onPullRequestFilterChanged($event.value)\\\"></p-dropdown>\\n      </div>\\n    </div>\\n    <div style=\\\"text-align: right\\\">\\n      <div class=\\\"ui-g-12\\\">\\n        <h3 class=\\\"first\\\">Project</h3>\\n        <p-dropdown [options]=\\\"projectOptions\\\" (onChange)=\\\"loadDeploymentsWithFilter('projectKey', $event.value)\\\"></p-dropdown>\\n      </div>\\n    </div>\\n  </ng-template>\\n  <ng-template pTemplate=\\\"header\\\" let-columns>\\n    <tr>\\n      <th *ngFor=\\\"let col of columns\\\" [pSortableColumn]=\\\"col.isSortable && col.field\\\">\\n        {{col.header}}\\n        <p-sortIcon [field]=\\\"col.field\\\" ariaLabel=\\\"Activate to sort\\\" *ngIf=\\\"col.isSortable\\\"\\n          ariaLabelDesc=\\\"Activate to sort in descending order\\\" ariaLabelAsc=\\\"Activate to sort in ascending order\\\">\\n        </p-sortIcon>\\n      </th>\\n      <th class=\\\"edit-column\\\"></th>\\n    </tr>\\n    <tr>\\n      <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\n          <p-dropdown *ngSwitchCase=\\\"'name'\\\" [options]=\\\"deploymentNameOptions\\\" [style]=\\\"{'width':'100%'}\\\"\\n          (onChange)=\\\"loadDeploymentsWithFilter(col.field, $event.value)\\\"></p-dropdown>\\n      </th>\\n      <th></th>\\n    </tr>\\n  </ng-template>\\n\\n\\n  <ng-template pTemplate=\\\"body\\\" let-rowData let-ri=\\\"rowIndex\\\" let-editing=\\\"editing\\\">\\n    <tr [pEditableRow]=\\\"rowData\\\">\\n      <td  *ngFor=\\\"let col of cols;\\\">\\n        <div *ngIf=\\\"col.field !== 'jiraStatus.name'\\\">\\n            <div [innerHTML]=\\\"getCellValue(rowData, col)\\\">\\n            </div>\\n        </div>\\n        <p-cellEditor *ngIf=\\\"col.field === 'jiraStatus.name'\\\">\\n          <ng-template pTemplate=\\\"input\\\">\\n            <p-dropdown [options]=\\\"rowData.presentationTransitionList\\\" [style]=\\\"{'width':'100%'}\\\" [(ngModel)]=\\\"rowData.jiraStatus.id\\\">\\n\\n            </p-dropdown>\\n          </ng-template>\\n          <ng-template pTemplate=\\\"output\\\">\\n            {{getCellValue(rowData, col)}}\\n          </ng-template>\\n        </p-cellEditor>\\n      </td>\\n\\n      <td style=\\\"text-align:center\\\">\\n        <div *ngIf=\\\"rowData.$meta.$isEditable\\\" style=\\\"display: inline-block\\\">\\n          <button *ngIf=\\\"!editing\\\" type=\\\"button\\\" pInitEditableRow class=\\\"pi pi-pencil\\\"\\n            (click)=\\\"editing = true && onRowEditInit(rowData)\\\"></button>\\n          <button *ngIf=\\\"editing\\\" type=\\\"button\\\" pSaveEditableRow class=\\\"pi pi-check\\\" style=\\\"margin-right: .5em\\\"\\n            (click)=\\\"onRowEditSave(rowData)\\\"></button>\\n          <button *ngIf=\\\"editing\\\" type=\\\"button\\\" pCancelEditableRow class=\\\"pi pi-times\\\"\\n            (click)=\\\"editing = false && onRowEditCancel(rowData, ri)\\\"></button>\\n        </div>\\n        <button *ngIf=\\\"rowData.$meta.$isInstallable && !editing\\\" type=\\\"button\\\" class=\\\"pi pi-cloud-upload\\\"\\n            (click)=\\\"showInstallDeploymentDialog(rowData)\\\"></button>\\n      </td>\\n    </tr>\\n  </ng-template>\\n</p-table>\\n\\n<app-qa-server-state *ngIf=\\\"showServerState\\\"></app-qa-server-state>\\n\\n<p-dialog\\n    header=\\\"{{installableDeployment?.pullRequestMeta ? 'Install deployment' : 'Promote to production'}}\\\"\\n    [(visible)]=\\\"displayDialog\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [modal]=\\\"true\\\" [style]=\\\"{width: '60%'}\\\">\\n    <div class=\\\"ui-g ui-fluid\\\" *ngIf=\\\"installableDeployment\\\">\\n        <div class=\\\"ui-g-12\\\">\\n          <div class=\\\"ui-g-4\\\">\\n            <label for=\\\"serverTag\\\">Server tag</label>\\n          </div>\\n          <div class=\\\"ui-g-8\\\">\\n            <p-dropdown [options]=\\\"serverTagOptions\\\" [(ngModel)]=\\\"targetInstallServerTag\\\">\\n            </p-dropdown>\\n          </div>\\n        </div>\\n      <div class=\\\"ui-g-12\\\">\\n        <div class=\\\"ui-g-4\\\">\\n          <label for=\\\"vin\\\">Name:</label>\\n        </div>\\n        <div class=\\\"ui-g-8\\\">\\n          {{installableDeployment.name}}\\n        </div>\\n      </div>\\n      <div class=\\\"ui-g-12\\\">\\n        <div class=\\\"ui-g-4\\\">\\n          <label for=\\\"vin\\\">Version:</label>\\n        </div>\\n        <div class=\\\"ui-g-8\\\">\\n          {{installableDeployment.version}}\\n        </div>\\n      </div>\\n     <div *ngIf=\\\"installableDeployment.pullRequestMeta\\\">\\n        <div class=\\\"ui-g-12\\\">\\n            <div class=\\\"ui-g-4\\\">\\n              <label for=\\\"vin\\\">Source branch:</label>\\n            </div>\\n            <div class=\\\"ui-g-8\\\">\\n              {{installableDeployment.pullRequestMeta.sourceBranch}}\\n            </div>\\n          </div>\\n          <div class=\\\"ui-g-12\\\">\\n              <div class=\\\"ui-g-4\\\">\\n                <label for=\\\"vin\\\">Target branch:</label>\\n              </div>\\n              <div class=\\\"ui-g-8\\\">\\n                {{installableDeployment.pullRequestMeta.targetBranch}}\\n              </div>\\n            </div>\\n          <div class=\\\"ui-g-12\\\">\\n            <div class=\\\"ui-g-4\\\">\\n              <label for=\\\"vin\\\">Pull request link:</label>\\n            </div>\\n            <div class=\\\"ui-g-8\\\">\\n              {{installableDeployment.pullRequestMeta.pullLink}}\\n            </div>\\n          </div>\\n     </div>\\n    </div>\\n    <p-footer>\\n        <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\">\\n            <button\\n              type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"signalDeploymentInstall()\\\"\\n              label=\\\"{{installableDeployment?.pullRequestMeta ? 'Install' : 'Promote'}}\\\">\\n            </button>\\n        </div>\\n    </p-footer>\\n</p-dialog>\\n\\n<app-deployment-progress-indicator [deployment]=\\\"doneTransitionedDeployment\\\" (closed)=\\\"onProgressIndicatorClosed()\\\">\\n\\n</app-deployment-progress-indicator>\\n\\n<app-loading-mask></app-loading-mask>\\n\"","module.exports = \".edit-column {\\n  width: 8em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sdWNhYWxleGFuZHJ1L3dvcmtzcGFjZS90ZXJyaWEvaGVybWVzLXBhY2thZ2VzL2hlcm1lcy1wYWNrYWdlcy13d3cvc3JjL2FwcC9kZXBsb3ltZW50L2RlcGxveW1lbnQtbGlzdC9kZXBsb3ltZW50LWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFVLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9kZXBsb3ltZW50L2RlcGxveW1lbnQtbGlzdC9kZXBsb3ltZW50LWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZWRpdC1jb2x1bW4ge1xuICB3aWR0aDogOGVtO1xufVxuIl19 */\"","import {Component, OnInit} from '@angular/core';\nimport {DeploymentService} from '../deployment.service';\nimport {Deployment, DeploymentStatus, DeploymentBand, PullRequestStatus} from '../../common/models/domain/Deployment';\nimport {SelectItem} from 'primeng/components/common/selectitem';\nimport {MessageService} from 'primeng/api';\nimport {ColumnFactory, ColumnMode} from './ColumnFactory';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {PresentationDeployment, DeploymentMapper} from 'src/app/common/models/presentation/Deployment';\n\nexport enum DeploymentType {\n  PULL_REQUEST = 'pull-request',\n  RELEASE_CANDIDATE = 'release-candidate',\n  ALL = ''\n}\n\n@Component({\n  selector: 'app-deployment-list',\n  templateUrl: './deployment-list.component.html',\n  styleUrls: ['./deployment-list.component.scss'],\n  providers: [MessageService]\n})\nexport class DeploymentListComponent implements OnInit {\n  private deploymentService: DeploymentService;\n  private messageService: MessageService;\n  protected deploymentType: DeploymentType;\n  protected installBand: DeploymentBand;\n  protected isFilteredMode: boolean;\n  public showServerState: boolean;\n\n  deployments: PresentationDeployment[];\n  totalDeployments: number;\n  loadingDeployments = true;\n  clonedDeployments: Deployment[];\n  installableDeployment: Deployment;\n  doneTransitionedDeployment: Deployment;\n  displayDialog: boolean;\n  cols: any[];\n  deploymentNameOptions: SelectItem[];\n  deploymentStatuses: SelectItem[];\n  deploymentTypes: SelectItem[] = [\n    {label: 'PULL REQUEST', value: DeploymentType.PULL_REQUEST},\n    {label: 'RELEASE CANDIDATE', value: DeploymentType.RELEASE_CANDIDATE}\n  ];\n  targetInstallServerTag: string;\n  serverTagOptions: SelectItem[];\n  projectOptions: SelectItem[];\n  deploymentBand: SelectItem[] = [\n    {label: 'ALL', value: ''},\n    {label: 'DEVELOP', value: 'develop'},\n    {label: 'RELEASE', value: 'release'},\n    {label: 'PRODUCTION', value: 'production'},\n  ];\n  paginationOptions: {first?: number, rows?: number, sortField?: string, sortOrder?: number, query?: object} = {query: {}};\n\n  constructor(deploymentService: DeploymentService, messageService: MessageService) {\n    this.deploymentService = deploymentService;\n    this.messageService = messageService;\n  }\n\n  async ngOnInit() {\n    this.setColumnConfig(this.deploymentType);\n    await this.initializeContext();\n\n    this.deploymentService.onPackagerConnected(() => this.initializeContext());\n  }\n\n  async initializeContext() {\n    if (!this.installBand) {\n      throw new Error('missing install band');\n    }\n\n    const deploymentContext = await this.deploymentService.getPullRequestDeploymentContext(this.installBand);\n\n    this.serverTagOptions = deploymentContext.connectedServers.reduce((tags, server) => {\n      tags.push({\n        value: server.tag,\n        label: server.tag\n      });\n      return tags;\n    }, []);\n\n    this.targetInstallServerTag = deploymentContext.connectedServers[0] && deploymentContext.connectedServers[0].tag;\n\n    this.projectOptions = deploymentContext.projectKeys.reduce((options, projectKey) => {\n      options.push({\n        value: projectKey,\n        label: projectKey\n      });\n      return options;\n    }, [{\n      label: 'ALL',\n      value: undefined\n    }]);\n\n    this.deploymentNameOptions = deploymentContext.deploymentNames.reduce((options, deploymentName) => {\n      options.push({label: deploymentName, value: deploymentName});\n      return options;\n    }, [{\n      label: '',\n      value: undefined\n    }]);\n\n    this.deploymentService.onApplicationUpdated(({serverTag, deploymentName, version}) => {\n      this.messageService.add({\n        severity: 'info',\n        summary: `${serverTag} update`,\n        detail: `application ${deploymentName} has been updated to version ${version}`\n      });\n    });\n  }\n\n  async loadDeployments({first, rows, sortField, sortOrder}) {\n    Object.assign(this.paginationOptions, {\n      first,\n      rows,\n      sortField,\n      sortOrder\n    });\n\n    this.loadingDeployments = true;\n\n    let isPullRequestDeployment = this.deploymentType === DeploymentType.PULL_REQUEST;\n    let isReleaseCandidate = this.deploymentType === DeploymentType.RELEASE_CANDIDATE;\n\n    const query = {\n      band: isPullRequestDeployment ? DeploymentBand.QA : DeploymentBand.RELEASE,\n      pullRequestMeta: {\n        $exists: isPullRequestDeployment ? true : false\n      }\n    } as any;\n\n    if (isPullRequestDeployment) {\n      query['pullRequestMeta.status'] = {$ne: PullRequestStatus.MERGED};\n    }\n\n    Object.assign(query, this.paginationOptions.query);\n\n    const pageNumber = (first / rows) + 1;\n\n    const pageResult = await this.deploymentService.getDeployments({\n      query,\n      pageNumber,\n      pageSize: rows,\n      sort: {\n        property: sortField,\n        direction: sortOrder === 1 ? 'asc' : 'desc'\n      },\n      distinct: isReleaseCandidate ? 'name' : undefined\n    });\n\n    this.deployments = DeploymentMapper.toPresentationDeploymentList(pageResult.items);\n    this.totalDeployments = pageResult.totalCount;\n\n    this.loadingDeployments = false;\n  }\n\n  loadDeploymentsWithFilter(property, value, type = 'equals') {\n    let operator;\n\n    if (type === 'equals') {\n      operator = '$eq';\n    }\n\n    if (value || typeof value === 'boolean') {\n      this.paginationOptions.query[property] = {[operator]: value};\n    } else {\n      delete this.paginationOptions.query[property];\n    }\n\n    this.loadDeployments(this.paginationOptions as any);\n  }\n\n  onRowEditInit(deployment: Deployment) {\n    /*  this.messageService.add({severity: 'info', summary: 'on edit init', detail: 'on edit init'}); */\n  }\n\n  onRowEditSave(deployment: Deployment) {\n    let status = deployment.transitionList.find(d => d.id === deployment.jiraStatus.id);\n\n    const updatePayload = {\n      pullId: deployment.pullRequestMeta.pullId,\n      jiraStatusId: deployment.jiraStatus.id\n    };\n\n\n    if (status.name === DeploymentStatus.DONE) {\n      this.doneTransitionedDeployment = deployment;\n    }\n\n    this.deploymentService.updateDeployment(deployment.id, updatePayload).then(() => {\n      this.messageService.add({severity: 'info', summary: 'was saved', detail: 'save'});\n    }).catch(err => {\n      this.messageService.add({severity: 'error', summary: err.message, detail: err.message});\n    });\n  }\n\n  onProgressIndicatorClosed() {\n    this.doneTransitionedDeployment = null;\n  }\n\n  onRowEditCancel(deployment: Deployment, index: number) {\n    this.messageService.add({severity: 'success', summary: 'Success', detail: 'Car is updated'});\n  }\n\n  setColumnConfig(deploymentType = DeploymentType.PULL_REQUEST) {\n    const columnMode = deploymentType === DeploymentType.PULL_REQUEST ? ColumnMode.PULL_REQUEST : ColumnMode.RELEASE_CANDIDATE;\n    this.cols = ColumnFactory.getColumns(columnMode);\n  }\n\n  showInstallDeploymentDialog(deployment: Deployment) {\n    this.displayDialog = true;\n    this.installableDeployment = deployment;\n  }\n\n  async signalDeploymentInstall() {\n    const isPullRequest = this.installableDeployment.pullRequestMeta;\n\n    try {\n      if (isPullRequest) {\n        await this.deploymentService.signalDeploymentInstall({\n          deploymentName: this.installableDeployment.name,\n          pullId: this.installableDeployment.pullRequestMeta.pullId,\n          serverTags: [this.targetInstallServerTag]\n        });\n      } else {\n        await this.deploymentService.promoteDeployment({\n          deploymentName: this.installableDeployment.name,\n          version: this.installableDeployment.version,\n          serverTag: this.targetInstallServerTag\n        });\n      }\n    } catch (err) {\n      this.messageService.add({severity: 'error', summary: err.message, detail: err.message});\n    } finally {\n      this.displayDialog = false;\n    }\n  }\n\n  getCellValue(rowData, {field, renderer}) {\n    const dataIndexes = field.split('.');\n    let val = rowData;\n\n    for (let i = 0; i < dataIndexes.length; i++) {\n      const dataIndex = dataIndexes[i];\n      val = val[dataIndex];\n\n      if (!val || typeof val !== 'object') {\n        break;\n      }\n    }\n\n    if (renderer) {\n      val = renderer(rowData);\n    }\n\n    return val;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlcGxveW1lbnQvZGVwbG95bWVudC1wcm9ncmVzcy1pbmRpY2F0b3IvZGVwbG95bWVudC1wcm9ncmVzcy1pbmRpY2F0b3IuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p-dialog *ngIf=\\\"deployment\\\"\\n    header=\\\"{{deployment.pullRequestMeta.issueNumber}}/{{deployment.pullRequestMeta.pullId}}\\\"\\n    [visible]=\\\"true\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [modal]=\\\"true\\\" [style]=\\\"{width: '60%'}\\\">\\n    <div>\\n      <div *ngFor=\\\"let event of deploymentEvents\\\">\\n          {{'deploymentStatusUpdate.' + event.eventName | translate:event.data}}\\n          <i class=\\\"pi\\\" [ngClass]=\\\"{'pi-spin pi-spinner': event.action === 'start', 'pi-check': event.action === 'end', 'pi-times': event.action === 'failure'}\\\"></i>\\n      </div>\\n    </div>\\n    <p-footer>\\n        <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\">\\n            <button\\n              type=\\\"button\\\" pButton (click)=\\\"closeDialog()\\\"\\n              label=\\\"Ok\\\">\\n            </button>\\n        </div>\\n    </p-footer>\\n</p-dialog>\\n\"","import { Component, OnInit, Input, Output, OnChanges } from '@angular/core';\nimport {DeploymentService} from '../deployment.service';\nimport {DeploymentStatusEvent, Deployment} from 'src/app/common/models/domain/Deployment';\nimport { EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-deployment-progress-indicator',\n  templateUrl: './deployment-progress-indicator.component.html',\n  styleUrls: ['./deployment-progress-indicator.component.css']\n})\nexport class DeploymentProgressIndicatorComponent implements OnInit, OnChanges {\n  private visible = false;\n  private deploymentService: DeploymentService;\n  public displayDialog = true;\n  public deploymentEvents: DeploymentStatusEvent[] = [];\n  public _deployment: Deployment;\n  @Output()\n  public closed = new EventEmitter();\n\n\n  constructor(deploymentService: DeploymentService) {\n    this.deploymentService = deploymentService;\n  }\n\n  ngOnInit() {\n    this.deploymentService.onDeploymentStatusUpdate((event => {\n      let found = false;\n\n      for (let i = 0; i < this.deploymentEvents.length; i++) {\n        let existingEvent = this.deploymentEvents[i];\n\n        if (existingEvent.eventName === event.eventName) {\n          this.deploymentEvents[i] = event;\n          found = true;\n          break;\n        }\n\n      }\n\n      if (!found) {\n        this.deploymentEvents.push(event);\n      }\n    }));\n  }\n\n  ngOnChanges() {\n    this.deploymentEvents = [];\n  }\n\n  @Input()\n  set deployment(deployment: Deployment) {\n    this.visible = true;\n    this._deployment = deployment;\n  }\n\n  get deployment(): Deployment {\n    return this._deployment;\n  }\n\n  closeDialog() {\n    this.visible = false;\n    this.closed.emit('closed');\n    console.log('emitting closed');\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DeploymentListComponent} from './deployment-list/deployment-list.component';\nimport {PackageCommonModule} from '../common/common.module';\nimport {DeploymentListPullRequestComponent} from './deployment-list/deployment-list-pr.component';\nimport {DeploymentListReleaseCandidateComponent} from './deployment-list/deployment-list-rc.component';\nimport { DeploymentProgressIndicatorComponent } from './deployment-progress-indicator/deployment-progress-indicator.component';\nimport { QaServerStateComponent } from './qa-server-state/qa-server-state.component';\nimport {TooltipModule} from 'primeng/tooltip';\n\n@NgModule({\n  declarations: [\n    DeploymentListComponent,\n    DeploymentListPullRequestComponent,\n    DeploymentListReleaseCandidateComponent,\n    DeploymentProgressIndicatorComponent,\n    QaServerStateComponent\n  ],\n  imports: [\n    CommonModule,\n    PackageCommonModule,\n    TooltipModule\n  ],\n  exports: [\n    DeploymentListComponent,\n    DeploymentListPullRequestComponent,\n    DeploymentListReleaseCandidateComponent\n\n  ]\n})\nexport class DeploymentModule {}\n","import {Injectable, NgZone} from '@angular/core';\nimport {Api} from '../common/api.service';\nimport {Deployment, DeploymentField, DeploymentStatus, DeploymentStatusEvent, PullRequestStatus, DeploymentBand} from '../common/models/domain/Deployment';\nimport {ServerDeployment} from '../common/models/domain/ServerDeployment';\nimport {Subject, Observable} from 'rxjs';\nimport io from 'socket.io-client';\nimport {Config} from '../common/config.service';\nimport {PageResult, PageRequest} from '../common/models/domain/Page';\nimport {DeploymentContext} from '../common/models/domain/DeploymentContext';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeploymentService {\n  private clientInstance;\n  private socket;\n  private serverListSubject = new Subject<any>();\n  private serverListObservable = this.serverListSubject.asObservable();\n\n  private applicationUpdatedSubject = new Subject<any>();\n  private applicationUpdatedObservable = this.applicationUpdatedSubject.asObservable();\n\n  private packageUpdaterConnectedSubject = new Subject<any>();\n  private packageUpdaterConnectedObservable = this.packageUpdaterConnectedSubject.asObservable();\n\n  private deploymentStatusUpdateSubject = new Subject<any>();\n  private deploymentStatusUpdateSObservable: Observable<any> = this.deploymentStatusUpdateSubject.asObservable();\n  private zone: NgZone;\n  private config: Config;\n\n  constructor(api: Api, zone: NgZone, config: Config) {\n    this.zone = zone;\n    this.config = config;\n    this.clientInstance = api.clientInstance;\n\n    this.socket = io(`${config.locationOrigin}?web-client=true`);\n\n    this.socket.on('client-update-available', () => {\n      this.zone.run(() => {\n        this.serverListSubject.next();\n      });\n    });\n\n    this.socket.on('deployment-status-update', (event) => {\n      this.zone.run(() => {\n        this.deploymentStatusUpdateSubject.next(event);\n      });\n    });\n\n    this.socket.on('application-updated', (appMeta) => {\n      this.zone.run(() => {\n        this.applicationUpdatedSubject.next(appMeta);\n      });\n    });\n\n    this.socket.on('package-updater-connected', () => {\n      this.zone.run(() => {\n        this.packageUpdaterConnectedSubject.next();\n      });\n    });\n  }\n\n  async getDeployments(options: PageRequest): Promise<PageResult<Deployment>> {\n    const pageResult: PageResult<Deployment> = await this.clientInstance.apis.deployments.getDeployments({options});\n\n    pageResult.items.forEach(deployment => {\n      if (deployment.pullRequestMeta && deployment.pullRequestMeta.sourceBranch) {}\n      this.addDeploymentMetaInfo(deployment);\n    });\n\n    return pageResult;\n  }\n\n  onServerListChanged(func: () => any) {\n    this.serverListObservable.subscribe(func);\n  }\n\n/**\n * Register listeners for application update event. Fires when an application has been updated by hermes-package-updater\n */\n  onApplicationUpdated(func: (appMeta) => any) {\n    this.applicationUpdatedObservable.subscribe(func);\n  }\n\n  /**\n   * Register listeners for deployment status update event.\n   * Fires when a deployment gets transitioned to status done, will fire for each phase\n   */\n  onDeploymentStatusUpdate(func: (event: DeploymentStatusEvent) => any) {\n    this.deploymentStatusUpdateSObservable.subscribe(func);\n  }\n\n  /**\n   * Register listeners for hermes package updater connect event.\n   * Fires when a new instance of hermes-package-updater connects\n   */\n  onPackagerConnected(func: () => any) {\n    this.packageUpdaterConnectedObservable.subscribe(func);\n  }\n\n  addDeploymentMetaInfo(deployment: Deployment) {\n    const meta = {\n      $isEditable: false,\n      $isInstallable: false\n    };\n\n    deployment.$meta = meta;\n\n    // pull requests and release candidate should always be installable/promotable\n    meta.$isInstallable = true;\n\n    if (!deployment.pullRequestMeta) {\n      return;\n    }\n\n    let prStatus = deployment.pullRequestMeta.status;\n\n    let isStatusEditable = ![PullRequestStatus.MERGING_BLOCKED, PullRequestStatus.PENDING_REVIEW].includes(prStatus);\n\n    for (const prop in deployment) {\n      if (prop === DeploymentField.Status && isStatusEditable) {\n        meta[prop] = {\n          isEditable: true\n        };\n        meta.$isEditable = true;\n      } else {\n        meta[prop] = {\n          isEditable: false\n        };\n      }\n    }\n  }\n\n  updateDeployment(deploymentId, deployment: {pullId: string, jiraStatusId: string}) {\n    return this.clientInstance.apis.deployments.updateDeployment({\n      deploymentId,\n      deployment\n    });\n  }\n\n  signalDeploymentInstall(options: {deploymentName: string, pullId: string, serverTags: string[]}) {\n    return this.clientInstance.apis.deployments.signalDeploymentInstall({\n      deploymentName: options.deploymentName,\n      pullId: options.pullId,\n      payload: {\n        serverTags: options.serverTags\n      }\n    });\n  }\n\n  promoteDeployment(options: {deploymentName: string, version: string, serverTag: string}) {\n    return this.clientInstance.apis.deployments.promoteDeployment(options);\n  }\n\n  getPullRequestDeploymentContext(band: DeploymentBand): DeploymentContext {\n    return this.clientInstance.apis.deployments.getPullRequestDeploymentContext({\n      band\n    });\n  }\n\n  getServerDeploymentMeta(band?: DeploymentBand): Promise<ServerDeployment[]> {\n    return this.clientInstance.apis.deployments.getServerDeploymentMeta({\n      band\n    });\n  }\n\n  resetDeploymentToRelease(deploymentName, serverTag) {\n    return this.clientInstance.apis.deployments.resetDeploymentToRelease({\n      deploymentName,\n      serverTag\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlcGxveW1lbnQvcWEtc2VydmVyLXN0YXRlL3FhLXNlcnZlci1zdGF0ZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p-toast [style]=\\\"{marginTop: '80px'}\\\"></p-toast>\\n\\n<p-table #dt [columns]=\\\"cols\\\" [value]=\\\"serverDeploymentList\\\" dataKey=\\\"serverTag\\\">\\n  <ng-template pTemplate=\\\"caption\\\">\\n\\n  </ng-template>\\n  <ng-template pTemplate=\\\"header\\\" let-columns>\\n    <tr>\\n      <th *ngFor=\\\"let col of columns\\\">\\n        {{col.header}}\\n      </th>\\n      <th style=\\\"width: 7em\\\"></th>\\n    </tr>\\n    <tr>\\n      <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\n        <p-dropdown *ngSwitchCase=\\\"'serverTag'\\\" [options]=\\\"serverTags\\\" [style]=\\\"{'width':'100%'}\\\"\\n          (onChange)=\\\"dt.filter($event.value, col.field, 'equals')\\\"></p-dropdown>\\n      </th>\\n      <th></th>\\n    </tr>\\n  </ng-template>\\n\\n\\n  <ng-template pTemplate=\\\"body\\\" let-rowData let-ri=\\\"rowIndex\\\" let-editing=\\\"editing\\\">\\n    <tr [pEditableRow]=\\\"rowData\\\">\\n      <td *ngFor=\\\"let col of cols;\\\">\\n        <div>\\n          {{col.renderer ? col.renderer(rowData) : rowData[col.field]}}\\n        </div>\\n      </td>\\n      <td>\\n        <div *ngIf=\\\"rowData.pullRequestMeta\\\">\\n            <button *ngIf=\\\"!rowData.updateMeta.isUpdating\\\" type=\\\"button\\\" class=\\\"pi pi-refresh\\\" pTooltip=\\\"Reset to release\\\"\\n            (click)=\\\"resetDeploymentToRelease(rowData)\\\">\\n            </button>\\n            <div *ngIf=\\\"rowData.updateMeta.isUpdating\\\" pTooltip=\\\"Updating to version {{getUpdateVersion(rowData.updateMeta)}}\\\">\\n                <i class=\\\"pi pi-spin pi-spinner\\\"></i>\\n            </div>\\n        </div>\\n      </td>\\n    </tr>\\n  </ng-template>\\n</p-table>\\n\"","import { Component, OnInit, NgZone } from '@angular/core';\nimport {DeploymentService} from '../deployment.service';\nimport {ServerDeployment} from 'src/app/common/models/domain/ServerDeployment';\nimport {SelectItem} from 'primeng/api';\nimport {Deployment, DeploymentBand} from 'src/app/common/models/domain/Deployment';\nimport {formatDeploymentVersion} from 'src/app/utils/deployment';\n\n@Component({\n  selector: 'app-qa-server-state',\n  templateUrl: './qa-server-state.component.html',\n  styleUrls: ['./qa-server-state.component.css']\n})\nexport class QaServerStateComponent implements OnInit {\n  private deploymentService: DeploymentService;\n  private zone: NgZone;\n  public serverDeploymentList: ServerDeployment[];\n  public serverTags: SelectItem[];\n  public cols: any[] = [\n    {field: 'serverTag', header: 'Server', isEditable: false},\n    {field: 'deploymentName', header: 'Name', isEditable: false},\n    {field: 'version', header: 'Installed version', isEditable: false, renderer: ({version, pullRequestMeta}) => {\n      return formatDeploymentVersion(version, pullRequestMeta);\n    }}\n  ];\n\n  constructor(deploymentService: DeploymentService, zone: NgZone) {\n    this.deploymentService = deploymentService;\n    this.zone = zone;\n  }\n\n  async ngOnInit() {\n    await this.setServerDeploymentMeta();\n    this.deploymentService.onServerListChanged(() => {\n      this.setServerDeploymentMeta();\n    });\n  }\n\n  async setServerDeploymentMeta() {\n    this.serverDeploymentList = await this.deploymentService.getServerDeploymentMeta(DeploymentBand.QA);\n    this.serverTags = this.serverDeploymentList.reduce((options, deployment) => {\n      const hasOption = options.some(option => option.value === deployment.serverTag);\n\n      if (!hasOption) {\n        options.push({\n          value: deployment.serverTag,\n          label: deployment.serverTag\n        });\n      }\n\n      return options;\n    }, []);\n  }\n\n  getUpdateVersion({updateVersion, pullRequestMeta}) {\n    return formatDeploymentVersion(updateVersion, pullRequestMeta);\n  }\n\n  resetDeploymentToRelease(rowData: {updateMeta: {isUpdating: boolean}, deploymentName: string, serverTag: string}) {\n    this.zone.run(() => {\n      return this.deploymentService.resetDeploymentToRelease(rowData.deploymentName, rowData.serverTag);\n    });\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n  private prefix = 'hermes-packages';\n  constructor() {\n  }\n\n  getItem(key) {\n    key = `${this.prefix}.${key}`;\n\n    let val = localStorage.getItem(key);\n\n    if (val) {\n      try {\n        val = JSON.parse(val);\n      } catch (err) {\n        // no op\n      }\n    }\n\n    const parseIntVal: any = parseInt(val, 10);\n\n    // tslint:disable-next-line:triple-equals\n    if (parseIntVal == val) {\n      return parseIntVal;\n    }\n\n    if (val === 'true') {\n      return true;\n    } else if (val === 'false') {\n      return false;\n    }\n\n    return val;\n  }\n\n  setItem(key, value) {\n    key = `${this.prefix}.${key}`;\n\n    localStorage.setItem(key, typeof value === 'object' ? JSON.stringify(value) : value);\n  }\n\n  removeItem(key) {\n    key = `${this.prefix}.${key}`;\n\n    localStorage.removeItem(key);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL292ZXJ2aWV3L292ZXJ2aWV3LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-server-state-list></app-server-state-list>\\n<app-deployment-list></app-deployment-list>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.css']\n})\nexport class OverviewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlcnZlci1zdGF0ZS9zZXJ2ZXItc3RhdGUtbGlzdC9zZXJ2ZXItc3RhdGUtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p-toast [style]=\\\"{marginTop: '80px'}\\\"></p-toast>\\n\\n<p-table #dt [columns]=\\\"cols\\\" [value]=\\\"serverDeploymentList\\\" dataKey=\\\"serverTag\\\">\\n    <ng-template pTemplate=\\\"caption\\\">\\n\\n    </ng-template>\\n    <ng-template pTemplate=\\\"header\\\" let-columns>\\n      <tr>\\n        <th *ngFor=\\\"let col of columns\\\">\\n          {{col.header}}\\n        </th>\\n      </tr>\\n      <tr>\\n        <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\n          <p-dropdown *ngSwitchCase=\\\"'serverTag'\\\" [options]=\\\"serverTags\\\" [style]=\\\"{'width':'100%'}\\\"\\n            (onChange)=\\\"dt.filter($event.value, col.field, 'equals')\\\"></p-dropdown>\\n        </th>\\n      </tr>\\n    </ng-template>\\n\\n\\n    <ng-template pTemplate=\\\"body\\\" let-rowData let-ri=\\\"rowIndex\\\" let-editing=\\\"editing\\\">\\n      <tr [pEditableRow]=\\\"rowData\\\">\\n        <td  *ngFor=\\\"let col of cols;\\\">\\n           <div *ngIf=\\\"col.field !== 'status'\\\">\\n              {{col.renderer ? col.renderer(rowData) : rowData[col.field]}}\\n           </div>\\n           <div *ngIf=\\\"col.field === 'status'\\\">\\n             <div *ngIf=\\\"rowData.version === rowData.lastVersion\\\">\\n               Up to date\\n              <label class=\\\"pi pi-check\\\"></label>\\n            </div>\\n            <div *ngIf=\\\"!rowData.lastVersion\\\">\\n                No deployment found\\n                <label class=\\\"pi pi-times\\\"></label>\\n            </div>\\n           </div>\\n        </td>\\n      </tr>\\n    </ng-template>\\n  </p-table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {DeploymentService} from 'src/app/deployment/deployment.service';\nimport {ServerDeployment} from 'src/app/common/models/domain/ServerDeployment';\nimport {SelectItem, MessageService} from 'primeng/api';\n\n@Component({\n  selector: 'app-server-state-list',\n  templateUrl: './server-state-list.component.html',\n  styleUrls: ['./server-state-list.component.css'],\n  providers: [MessageService]\n})\nexport class ServerStateListComponent implements OnInit {\n  private deploymentService: DeploymentService;\n  public serverDeploymentList: ServerDeployment[];\n  public serverTags: SelectItem[];\n  public cols: any[] = [\n    {field: 'serverTag', header: 'Server', isEditable: false},\n    {field: 'band', header: 'Band', isEditable: false},\n    {field: 'deploymentName', header: 'Name', isEditable: false},\n    {field: 'version', header: 'Installed version', isEditable: false, renderer: ({version, pullRequestMeta: pr}) => {\n      if (pr) {\n        return `${version}-prid-${pr.pullId}/${pr.issueNumber}`;\n      }\n      return version;\n    }},\n    {field: 'lastVersion', header: 'Last available version', isEditable: false},\n    {field: 'status', header: 'Status', isEditable: false},\n  ];\n\n  constructor(deploymentService: DeploymentService) {\n    this.deploymentService = deploymentService;\n  }\n\n  async ngOnInit() {\n    await this.setServerDeploymentMeta();\n    this.deploymentService.onServerListChanged(() => {\n      this.setServerDeploymentMeta();\n    });\n  }\n\n  async setServerDeploymentMeta() {\n    this.serverDeploymentList = await this.deploymentService.getServerDeploymentMeta();\n    this.serverTags = this.serverDeploymentList.reduce((options, deployment) => {\n      const hasOption = options.some(option => option.value === deployment.serverTag);\n\n      if (!hasOption) {\n        options.push({\n          value: deployment.serverTag,\n          label: deployment.serverTag\n        });\n      }\n\n      return options;\n    }, []);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ServerStateListComponent } from './server-state-list/server-state-list.component';\nimport {PackageCommonModule} from '../common/common.module';\n\n@NgModule({\n  declarations: [ServerStateListComponent],\n  imports: [\n    CommonModule,\n    PackageCommonModule\n  ],\n  exports: [\n    ServerStateListComponent\n  ]\n})\nexport class ServerStateModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZGViYXIvc2lkZWJhci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"grid\\\" *ngIf=\\\"userService.isUserLoggedIn()\\\">\\n    <header class=\\\"header\\\">\\n      <i class=\\\"fas fa-bars header__menu\\\"></i>\\n      <div class=\\\"header__search\\\">\\n      </div>\\n     <!--  <div class=\\\"header__avatar\\\">\\n        <div class=\\\"dropdown\\\">\\n          <ul class=\\\"dropdown__list\\\">\\n            <li class=\\\"dropdown__list-item\\\">\\n              <span class=\\\"dropdown__icon\\\"><i class=\\\"far fa-user\\\"></i></span>\\n              <span class=\\\"dropdown__title\\\">my profile</span>\\n            </li>\\n            <li class=\\\"dropdown__list-item\\\">\\n              <span class=\\\"dropdown__icon\\\"><i class=\\\"fas fa-clipboard-list\\\"></i></span>\\n              <span class=\\\"dropdown__title\\\">my account</span>\\n            </li>\\n            <li class=\\\"dropdown__list-item\\\">\\n              <span class=\\\"dropdown__icon\\\"><i class=\\\"fas fa-sign-out-alt\\\"></i></span>\\n              <span class=\\\"dropdown__title\\\">log out</span>\\n            </li>\\n          </ul>\\n        </div>\\n      </div> -->\\n    </header>\\n\\n    <aside class=\\\"sidenav\\\">\\n      <div class=\\\"sidenav__brand\\\">\\n        <i class=\\\"fas fa-feather-alt sidenav__brand-icon\\\"></i>\\n        <a class=\\\"sidenav__brand-link\\\" href=\\\"#\\\"><span class=\\\"text-light\\\"></span></a>\\n        <i class=\\\"fas fa-times sidenav__brand-close\\\"></i>\\n      </div>\\n      <div class=\\\"sidenav__profile\\\">\\n        <div class=\\\"sidenav__profile-avatar\\\" [ngStyle]=\\\"{'background-image': 'url(' + userProfile.imageUrl + ')'}\\\"></div>\\n        <div class=\\\"sidenav__profile-title text-light\\\">{{ userProfile.firstName}} {{ userProfile.lastName }}</div>\\n      </div>\\n      <div class=\\\"row row--align-v-center row--align-h-center\\\">\\n        <ul class=\\\"navList\\\">\\n          <li class=\\\"navList__heading\\\">deployments<i class=\\\"far fa-file-alt\\\"></i></li>\\n            <li>\\n            <div class=\\\"navList__subheading row row--align-v-center\\\">\\n              <span class=\\\"navList__subheading-icon\\\"><i class=\\\"fas fa-briefcase-medical\\\"></i></span>\\n              <span class=\\\"navList__subheading-title\\\" (click)=\\\"doRoute('overview')\\\">overview</span>\\n            </div>\\n          </li>\\n          <li>\\n            <div class=\\\"navList__subheading row row--align-v-center\\\"\\n                 routerLink=\\\"servers\\\" [routerLinkActive]=\\\"['active']\\\"\\n            >\\n              <span class=\\\"navList__subheading-icon\\\"><i class=\\\"fas fa-plane-departure\\\"></i></span>\\n              <span class=\\\"navList__subheading-title\\\" >server state</span>\\n            </div>\\n          </li>\\n          <li>\\n            <div class=\\\"navList__subheading row row--align-v-center\\\"\\n                 routerLink=\\\"deployments/pull-request\\\" [routerLinkActive]=\\\"['active']\\\">\\n              <span class=\\\"navList__subheading-icon\\\"><i class=\\\"far fa-angry\\\"></i></span>\\n              <span class=\\\"navList__subheading-title active\\\">pull requests</span>\\n            </div>\\n          </li>\\n          <li>\\n              <div class=\\\"navList__subheading row row--align-v-center\\\"\\n                   routerLink=\\\"deployments/release-candidate\\\" [routerLinkActive]=\\\"['active']\\\">\\n                <span class=\\\"navList__subheading-icon\\\"><i class=\\\"far fa-angry\\\"></i></span>\\n                <span class=\\\"navList__subheading-title\\\">release candidates</span>\\n              </div>\\n            </li>\\n        </ul>\\n      </div>\\n    </aside>\\n\\n    <main class=\\\"main\\\">\\n        <ng-content></ng-content>\\n    </main>\\n\\n    <footer class=\\\"footer\\\">\\n    </footer>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserService} from '../authorization/user.service';\nimport {UserProfile} from '../common/models/domain/UserProfile';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n  private router: Router;\n  public userProfile: UserProfile;\n  public userService: UserService;\n\n  constructor(userService: UserService, router: Router) {\n    this.userService = userService;\n    this.router = router;\n\n    this.userProfile = this.userService.getUserProfile();\n  }\n\n  ngOnInit() {\n  }\n\n  public doRoute(route: string) {\n    this.router.navigate([route]);\n  }\n\n}\n","import {PullRequestMeta} from '../common/models/domain/Deployment';\n\nexport function formatDeploymentVersion(version, pullRequestMeta: PullRequestMeta) {\n  if (pullRequestMeta) {\n    return `${version}-prid-${pullRequestMeta.pullId}/${pullRequestMeta.issueNumber}`;\n  }\n  return version;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":""}